name: Release service build

on:
  push:
    branches: [ 'releases/*' ]

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      CLOUDSDK_CORE_PROJECT: cal-itp-data-infra
    steps:

      - name: Check out repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Setup kubeconfig
        run: |
          source "$GITHUB_WORKSPACE/kubernetes/gke/config-cluster.sh"
          gcloud container clusters get-credentials "$GKE_NAME" --region "$GKE_REGION"

      - id: service-apply-release
        name: Release updated apps into branch channel
        shell: bash
        run: |
          parents=($(git show -s --pretty=format:%p $GITHUB_REF))

          if [[ ${#parents[*]} -lt 2 ]]; then
            printf 'Ref %s is not a merge commit; skipping release\n' "$GITHUB_REF"
            exit 0
          fi

          declare -A release_apps

          # find all apps with changed manifests
          while read path; do
            if [[ $path =~ ^kubernetes/apps/manifests/([^/])+/.*$ ]]; then
              release_apps[${BASH_REMATCH[1]]=1
            elif [[ $path =~ ^kubernetes/apps/overlays/([^/])+-[^-]+/.*$ ]]; then
              release_apps[${BASH_REMATCH[1]]=1
            fi
          done <<< "$(git diff-tree -r --name-only ${parents[*]})"

          # run release workflow for each app with changed manifest
          for app in "${!release_apps[@]}"; do
            export BUILD_APP=$app
            export RELEASE_CHANNEL=$(basename "$GITHUB_REF")
            printf 'WORKFLOW: service-apply-release; BUILD_APP=%s\n' "$BUILD_APP"
            source "$GITHUB_WORKSPACE/ci/workflows/service-apply-release.sh"
          done
