[[package]]
name = "aiohttp"
version = "3.8.1"
description = "Async http client/server framework (asyncio)"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
aiosignal = ">=1.1.2"
async-timeout = ">=4.0.0a3,<5.0"
attrs = ">=17.3.0"
charset-normalizer = ">=2.0,<3.0"
frozenlist = ">=1.1.1"
multidict = ">=4.5,<7.0"
yarl = ">=1.0,<2.0"

[package.extras]
speedups = ["cchardet", "brotli", "aiodns"]

[[package]]
name = "aiosignal"
version = "1.2.0"
description = "aiosignal: a list of registered asynchronous callbacks"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
frozenlist = ">=1.1.0"

[[package]]
name = "async-timeout"
version = "4.0.2"
description = "Timeout context manager for asyncio programs"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "atomicwrites"
version = "1.4.1"
description = "Atomic file writes."
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "attrs"
version = "21.4.0"
description = "Classes Without Boilerplate"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.extras]
tests_no_zope = ["cloudpickle", "pytest-mypy-plugins", "mypy", "six", "pytest (>=4.3.0)", "pympler", "hypothesis", "coverage[toml] (>=5.0.2)"]
tests = ["cloudpickle", "zope.interface", "pytest-mypy-plugins", "mypy", "six", "pytest (>=4.3.0)", "pympler", "hypothesis", "coverage[toml] (>=5.0.2)"]
docs = ["sphinx-notfound-page", "zope.interface", "sphinx", "furo"]
dev = ["cloudpickle", "pre-commit", "sphinx-notfound-page", "sphinx", "furo", "zope.interface", "pytest-mypy-plugins", "mypy", "six", "pytest (>=4.3.0)", "pympler", "hypothesis", "coverage[toml] (>=5.0.2)"]

[[package]]
name = "backoff"
version = "1.11.1"
description = "Function decoration for backoff and retry"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "black"
version = "22.6.0"
description = "The uncompromising code formatter."
category = "dev"
optional = false
python-versions = ">=3.6.2"

[package.dependencies]
click = ">=8.0.0"
mypy-extensions = ">=0.4.3"
pathspec = ">=0.9.0"
platformdirs = ">=2"
tomli = {version = ">=1.1.0", markers = "python_full_version < \"3.11.0a7\""}
typing-extensions = {version = ">=3.10.0.0", markers = "python_version < \"3.10\""}

[package.extras]
uvloop = ["uvloop (>=0.15.2)"]
jupyter = ["tokenize-rt (>=3.2.0)", "ipython (>=7.8.0)"]
d = ["aiohttp (>=3.7.4)"]
colorama = ["colorama (>=0.4.3)"]

[[package]]
name = "cachetools"
version = "4.2.4"
description = "Extensible memoizing collections and decorators"
category = "main"
optional = false
python-versions = "~=3.5"

[[package]]
name = "calitp"
version = "2022.8.19a0"
description = "Shared code for the Cal-ITP data codebases"
category = "main"
optional = false
python-versions = ">=3.8,<3.11"

[package.dependencies]
fsspec = ">=2022.5.0,<2022.7.1 || >2022.7.1,<2023.0.0"
gcsfs = ">=2022.5.0,<2022.7.1 || >2022.7.1,<2023.0.0"
google-api-core = ">=1.32.0,<2.0.0dev"
google-cloud-bigquery = ">=1.15.0,<3.0.0dev"
google-cloud-bigquery-storage = "2.14.1"
gtfs-realtime-bindings = ">=0.0.7,<0.0.8"
humanize = ">=4.2.3,<5.0.0"
Jinja2 = "<3.1.0"
pandas = ">=1.3.3,<2.0.0"
pandas-gbq = "<0.15.0"
pendulum = ">=2.1.2,<3.0.0"
protobuf = ">=3.19.0,<4.0.0dev"
pydantic = ">=1.9.1,<2.0.0"
siuba = ">=0.3.0,<0.4.0"
sqlalchemy-bigquery = ">=1.4.4,<2.0.0"
tqdm = ">=4.64.0,<5.0.0"

[[package]]
name = "certifi"
version = "2021.10.8"
description = "Python package for providing Mozilla's CA Bundle."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "charset-normalizer"
version = "2.0.12"
description = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."
category = "main"
optional = false
python-versions = ">=3.5.0"

[package.extras]
unicode_backport = ["unicodedata2"]

[[package]]
name = "click"
version = "8.0.0"
description = "Composable command line interface toolkit"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[[package]]
name = "colorama"
version = "0.4.4"
description = "Cross-platform colored terminal text."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "cycler"
version = "0.11.0"
description = "Composable style cycles"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "decorator"
version = "5.1.1"
description = "Decorators for Humans"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "fonttools"
version = "4.33.3"
description = "Tools to manipulate font files"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
woff = ["brotli (>=1.0.1)", "brotlicffi (>=0.8.0)", "zopfli (>=0.1.4)"]
unicode = ["unicodedata2 (>=14.0.0)"]
ufo = ["fs (>=2.2.0,<3)"]
type1 = ["xattr"]
symfont = ["sympy"]
repacker = ["uharfbuzz (>=0.23.0)"]
plot = ["matplotlib"]
pathops = ["skia-pathops (>=0.5.0)"]
lxml = ["lxml (>=4.0,<5)"]
interpolatable = ["munkres", "scipy"]
graphite = ["lz4 (>=1.7.4.2)"]
all = ["xattr", "unicodedata2 (>=14.0.0)", "munkres", "brotli (>=1.0.1)", "scipy", "brotlicffi (>=0.8.0)", "uharfbuzz (>=0.23.0)", "skia-pathops (>=0.5.0)", "sympy", "matplotlib", "lz4 (>=1.7.4.2)", "zopfli (>=0.1.4)", "lxml (>=4.0,<5)", "fs (>=2.2.0,<3)"]

[[package]]
name = "frozenlist"
version = "1.3.0"
description = "A list-like structure which implements collections.abc.MutableSequence"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "fsspec"
version = "2022.5.0"
description = "File-system specification"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
tqdm = ["tqdm"]
ssh = ["paramiko"]
smb = ["smbprotocol"]
sftp = ["paramiko"]
s3 = ["s3fs"]
oci = ["ocifs"]
libarchive = ["libarchive-c"]
http = ["aiohttp", "requests"]
hdfs = ["pyarrow (>=1)"]
gui = ["panel"]
gs = ["gcsfs"]
github = ["requests"]
git = ["pygit2"]
gcs = ["gcsfs"]
fuse = ["fusepy"]
entrypoints = ["importlib-metadata"]
dropbox = ["dropbox", "requests", "dropboxdrivefs"]
dask = ["distributed", "dask"]
arrow = ["pyarrow (>=1)"]
adl = ["adlfs"]
abfs = ["adlfs"]

[[package]]
name = "future"
version = "0.18.2"
description = "Clean single-source support for Python 3 and 2"
category = "main"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "gcsfs"
version = "2022.5.0"
description = "Convenient Filesystem interface over GCS"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
aiohttp = "<4"
decorator = ">4.1.2"
fsspec = "2022.5.0"
google-auth = ">=1.2"
google-auth-oauthlib = "*"
google-cloud-storage = "*"
requests = "*"

[package.extras]
gcsfuse = ["fusepy"]
crc = ["crcmod"]

[[package]]
name = "google-api-core"
version = "1.32.0"
description = "Google API client core library"
category = "main"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*"

[package.dependencies]
google-auth = ">=1.25.0,<2.0dev"
googleapis-common-protos = ">=1.6.0,<2.0dev"
grpcio = {version = ">=1.29.0,<2.0dev", optional = true, markers = "extra == \"grpc\""}
packaging = ">=14.3"
protobuf = {version = ">=3.12.0,<4.0.0dev", markers = "python_version > \"3\""}
pytz = "*"
requests = ">=2.18.0,<3.0.0dev"
six = ">=1.13.0"

[package.extras]
grpcio-gcp = ["grpcio-gcp (>=0.2.2)"]
grpcgcp = ["grpcio-gcp (>=0.2.2)"]
grpc = ["grpcio (>=1.29.0,<2.0dev)"]

[[package]]
name = "google-auth"
version = "1.32.1"
description = "Google Authentication Library"
category = "main"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*"

[package.dependencies]
cachetools = ">=2.0.0,<5.0"
pyasn1-modules = ">=0.2.1"
rsa = {version = ">=3.1.4,<5", markers = "python_version >= \"3.6\""}
six = ">=1.9.0"

[package.extras]
reauth = ["pyu2f (>=0.1.5)"]
pyopenssl = ["pyopenssl (>=20.0.0)"]
aiohttp = ["aiohttp (>=3.6.2,<4.0.0dev)", "requests (>=2.20.0,<3.0.0dev)"]

[[package]]
name = "google-auth-oauthlib"
version = "0.5.1"
description = "Google Authentication Library"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
google-auth = ">=1.0.0"
requests-oauthlib = ">=0.7.0"

[package.extras]
tool = ["click (>=6.0.0)"]

[[package]]
name = "google-cloud-bigquery"
version = "2.34.4"
description = "Google BigQuery API client library"
category = "main"
optional = false
python-versions = ">=3.6, <3.11"

[package.dependencies]
google-api-core = {version = ">=1.31.5,<2.0.0 || >2.3.0,<3.0.0dev", extras = ["grpc"]}
google-cloud-bigquery-storage = {version = ">=2.0.0,<3.0.0dev", optional = true, markers = "extra == \"bqstorage\""}
google-cloud-core = ">=1.4.1,<3.0.0dev"
google-resumable-media = ">=0.6.0,<3.0dev"
grpcio = ">=1.38.1,<2.0dev"
packaging = ">=14.3,<22.0dev"
pandas = {version = ">=0.24.2", optional = true, markers = "extra == \"pandas\""}
proto-plus = ">=1.15.0,<2.0.0dev"
protobuf = ">=3.12.0,<4.0.0dev"
pyarrow = {version = ">=3.0.0,<8.0dev", optional = true, markers = "extra == \"pandas\""}
python-dateutil = ">=2.7.2,<3.0dev"
requests = ">=2.18.0,<3.0.0dev"

[package.extras]
tqdm = ["tqdm (>=4.7.4,<5.0.0dev)"]
pandas = ["pyarrow (>=3.0.0,<8.0dev)", "pandas (>=0.24.2)"]
opentelemetry = ["opentelemetry-instrumentation (>=0.20b0)", "opentelemetry-sdk (>=1.1.0)", "opentelemetry-api (>=1.1.0)"]
ipython = ["ipython (>=7.0.1,!=8.1.0)"]
geopandas = ["Shapely (>=1.6.0,<2.0dev)", "geopandas (>=0.9.0,<1.0dev)"]
bqstorage = ["pyarrow (>=3.0.0,<8.0dev)", "grpcio (>=1.38.1,<2.0dev)", "google-cloud-bigquery-storage (>=2.0.0,<3.0.0dev)"]
bignumeric_type = ["pyarrow (>=3.0.0,<8.0dev)"]
all = ["opentelemetry-instrumentation (>=0.20b0)", "opentelemetry-sdk (>=1.1.0)", "opentelemetry-api (>=1.1.0)", "tqdm (>=4.7.4,<5.0.0dev)", "ipython (>=7.0.1,!=8.1.0)", "pandas (>=0.24.2)", "Shapely (>=1.6.0,<2.0dev)", "geopandas (>=0.9.0,<1.0dev)", "pyarrow (>=3.0.0,<8.0dev)", "grpcio (>=1.38.1,<2.0dev)", "google-cloud-bigquery-storage (>=2.0.0,<3.0.0dev)"]

[[package]]
name = "google-cloud-bigquery-storage"
version = "2.14.1"
description = "BigQuery Storage API API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.32.0,<2.0.0 || >=2.8.0,<3.0.0dev", extras = ["grpc"]}
proto-plus = ">=1.18.0,<2.0.0dev"
protobuf = ">=3.19.0,<4.0.0dev"

[package.extras]
tests = ["freezegun"]
pyarrow = ["pyarrow (>=0.15.0)"]
pandas = ["pandas (>=0.21.1)"]
fastavro = ["fastavro (>=0.21.2)"]

[[package]]
name = "google-cloud-core"
version = "2.2.3"
description = "Google Cloud API client core library"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
google-api-core = ">=1.31.5,<2.0.0 || >2.3.0,<3.0.0dev"
google-auth = ">=1.25.0,<3.0dev"

[package.extras]
grpc = ["grpcio (>=1.8.2,<2.0dev)"]

[[package]]
name = "google-cloud-storage"
version = "1.44.0"
description = "Google Cloud Storage API client library"
category = "main"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*"

[package.dependencies]
google-api-core = {version = ">=1.29.0,<3.0dev", markers = "python_version >= \"3.6\""}
google-auth = {version = ">=1.25.0,<3.0dev", markers = "python_version >= \"3.6\""}
google-cloud-core = {version = ">=1.6.0,<3.0dev", markers = "python_version >= \"3.6\""}
google-resumable-media = {version = ">=1.3.0,<3.0dev", markers = "python_version >= \"3.6\""}
protobuf = {version = "*", markers = "python_version >= \"3.6\""}
requests = ">=2.18.0,<3.0.0dev"
six = "*"

[[package]]
name = "google-crc32c"
version = "1.3.0"
description = "A python wrapper of the C library 'Google CRC32C'"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
testing = ["pytest"]

[[package]]
name = "google-resumable-media"
version = "2.3.2"
description = "Utilities for Google Media Downloads and Resumable Uploads"
category = "main"
optional = false
python-versions = ">= 3.6"

[package.dependencies]
google-crc32c = ">=1.0,<2.0dev"

[package.extras]
requests = ["requests (>=2.18.0,<3.0.0dev)"]
aiohttp = ["aiohttp (>=3.6.2,<4.0.0dev)"]

[[package]]
name = "googleapis-common-protos"
version = "1.56.0"
description = "Common protobufs used in Google APIs"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
protobuf = ">=3.12.0"

[package.extras]
grpc = ["grpcio (>=1.0.0)"]

[[package]]
name = "greenlet"
version = "1.1.2"
description = "Lightweight in-process concurrent programming"
category = "main"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*"

[package.extras]
docs = ["sphinx"]

[[package]]
name = "grpcio"
version = "1.45.0"
description = "HTTP/2-based RPC framework"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
six = ">=1.5.2"

[package.extras]
protobuf = ["grpcio-tools (>=1.45.0)"]

[[package]]
name = "gtfs-realtime-bindings"
version = "0.0.7"
description = "Python classes generated from the GTFS-realtime protocol buffer specification."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
protobuf = "*"

[[package]]
name = "humanize"
version = "4.3.0"
description = "Python humanize utilities"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
tests = ["pytest-cov", "pytest", "freezegun"]

[[package]]
name = "idna"
version = "3.3"
description = "Internationalized Domain Names in Applications (IDNA)"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "iniconfig"
version = "1.1.1"
description = "iniconfig: brain-dead simple config-ini parsing"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "isort"
version = "5.10.1"
description = "A Python utility / library to sort Python imports."
category = "dev"
optional = false
python-versions = ">=3.6.1,<4.0"

[package.extras]
plugins = ["setuptools"]
colors = ["colorama (>=0.4.3,<0.5.0)"]
requirements_deprecated_finder = ["pip-api", "pipreqs"]
pipfile_deprecated_finder = ["requirementslib", "pipreqs"]

[[package]]
name = "jinja2"
version = "3.0.3"
description = "A very fast and expressive template engine."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
MarkupSafe = ">=2.0"

[package.extras]
i18n = ["Babel (>=2.7)"]

[[package]]
name = "kiwisolver"
version = "1.4.2"
description = "A fast implementation of the Cassowary constraint solver"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "markupsafe"
version = "2.1.1"
description = "Safely add untrusted strings to HTML/XML markup."
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "matplotlib"
version = "3.5.1"
description = "Python plotting package"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
cycler = ">=0.10"
fonttools = ">=4.22.0"
kiwisolver = ">=1.0.1"
numpy = ">=1.17"
packaging = ">=20.0"
pillow = ">=6.2.0"
pyparsing = ">=2.2.1"
python-dateutil = ">=2.7"
setuptools_scm = ">=4"

[[package]]
name = "memory-profiler"
version = "0.60.0"
description = "A module for monitoring memory usage of a python program"
category = "main"
optional = false
python-versions = ">=3.4"

[package.dependencies]
psutil = "*"

[[package]]
name = "multidict"
version = "6.0.2"
description = "multidict implementation"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "mypy"
version = "0.971"
description = "Optional static typing for Python"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
mypy-extensions = ">=0.4.3"
tomli = {version = ">=1.1.0", markers = "python_version < \"3.11\""}
typing-extensions = ">=3.10"

[package.extras]
reports = ["lxml"]
python2 = ["typed-ast (>=1.4.0,<2)"]
dmypy = ["psutil (>=4.0)"]

[[package]]
name = "mypy-extensions"
version = "0.4.3"
description = "Experimental type system extensions for programs checked with the mypy typechecker."
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "numpy"
version = "1.21.5"
description = "NumPy is the fundamental package for array computing with Python."
category = "main"
optional = false
python-versions = ">=3.7,<3.11"

[[package]]
name = "oauthlib"
version = "3.2.0"
description = "A generic, spec-compliant, thorough implementation of the OAuth request-signing logic"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
signedtoken = ["pyjwt (>=2.0.0,<3)", "cryptography (>=3.0.0)"]
signals = ["blinker (>=1.4.0)"]
rsa = ["cryptography (>=3.0.0)"]

[[package]]
name = "packaging"
version = "21.3"
description = "Core utilities for Python packages"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
pyparsing = ">=2.0.2,<3.0.5 || >3.0.5"

[[package]]
name = "pandas"
version = "1.4.3"
description = "Powerful data structures for data analysis, time series, and statistics"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
numpy = [
    {version = ">=1.20.0", markers = "platform_machine == \"arm64\" and python_version < \"3.10\""},
    {version = ">=1.19.2", markers = "platform_machine == \"aarch64\" and python_version < \"3.10\""},
    {version = ">=1.18.5", markers = "platform_machine != \"aarch64\" and platform_machine != \"arm64\" and python_version < \"3.10\""},
]
python-dateutil = ">=2.8.1"
pytz = ">=2020.1"

[package.extras]
test = ["pytest-xdist (>=1.31)", "pytest (>=6.0)", "hypothesis (>=5.5.3)"]

[[package]]
name = "pandas-gbq"
version = "0.14.1"
description = "Pandas interface to Google BigQuery"
category = "main"
optional = false
python-versions = ">=3.5"

[package.dependencies]
google-auth = "*"
google-auth-oauthlib = "*"
google-cloud-bigquery = {version = ">=1.11.1,<3.0.0dev", extras = ["bqstorage", "pandas"]}
pandas = ">=0.20.1"
pydata-google-auth = "*"

[package.extras]
tqdm = ["tqdm (>=4.23.0)"]

[[package]]
name = "pathspec"
version = "0.9.0"
description = "Utility library for gitignore style pattern matching of file paths."
category = "dev"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"

[[package]]
name = "pathy"
version = "0.6.2"
description = "pathlib.Path subclasses for local and cloud bucket storage"
category = "main"
optional = false
python-versions = ">= 3.6"

[package.dependencies]
google-cloud-storage = {version = ">=1.26.0,<2.0.0", optional = true, markers = "extra == \"gcs\""}
smart-open = ">=5.2.1,<6.0.0"
typer = ">=0.3.0,<1.0.0"

[package.extras]
test = ["typer-cli", "mock", "pytest-coverage", "pytest"]
s3 = ["boto3"]
gcs = ["google-cloud-storage (>=1.26.0,<2.0.0)"]
all = ["typer-cli", "mock", "pytest-coverage", "pytest", "boto3", "google-cloud-storage (>=1.26.0,<2.0.0)"]

[[package]]
name = "pendulum"
version = "2.1.2"
description = "Python datetimes made easy"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.dependencies]
python-dateutil = ">=2.6,<3.0"
pytzdata = ">=2020.1"

[[package]]
name = "pillow"
version = "9.1.1"
description = "Python Imaging Library (Fork)"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
tests = ["pytest-timeout", "pytest-cov", "pytest", "pyroma", "packaging", "olefile", "markdown2", "defusedxml", "coverage", "check-manifest"]
docs = ["sphinxext-opengraph", "sphinx-rtd-theme (>=1.0)", "sphinx-removed-in", "sphinx-issues (>=3.0.1)", "sphinx-copybutton", "sphinx (>=2.4)", "olefile"]

[[package]]
name = "platformdirs"
version = "2.5.2"
description = "A small Python module for determining appropriate platform-specific dirs, e.g. a \"user data dir\"."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
test = ["pytest (>=6)", "pytest-mock (>=3.6)", "pytest-cov (>=2.7)", "appdirs (==1.4.4)"]
docs = ["sphinx (>=4)", "sphinx-autodoc-typehints (>=1.12)", "proselint (>=0.10.2)", "furo (>=2021.7.5b38)"]

[[package]]
name = "pluggy"
version = "1.0.0"
description = "plugin and hook calling mechanisms for python"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.extras]
testing = ["pytest-benchmark", "pytest"]
dev = ["tox", "pre-commit"]

[[package]]
name = "proto-plus"
version = "1.20.3"
description = "Beautiful, Pythonic protocol buffers."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
protobuf = ">=3.19.0"

[package.extras]
testing = ["google-api-core[grpc] (>=1.22.2)"]

[[package]]
name = "protobuf"
version = "3.19.4"
description = "Protocol Buffers"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "psutil"
version = "5.9.0"
description = "Cross-platform lib for process and system monitoring in Python."
category = "main"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.extras]
test = ["wmi", "pywin32", "enum34", "unittest2", "mock", "ipaddress"]

[[package]]
name = "py"
version = "1.11.0"
description = "library with cross-python path, ini-parsing, io, code, log facilities"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "pyarrow"
version = "6.0.1"
description = "Python library for Apache Arrow"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
numpy = ">=1.16.6"

[[package]]
name = "pyasn1"
version = "0.4.8"
description = "ASN.1 types and codecs"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pyasn1-modules"
version = "0.2.8"
description = "A collection of ASN.1-based protocols modules."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
pyasn1 = ">=0.4.6,<0.5.0"

[[package]]
name = "pydantic"
version = "1.9.2"
description = "Data validation and settings management using python type hints"
category = "main"
optional = false
python-versions = ">=3.6.1"

[package.dependencies]
typing-extensions = ">=3.7.4.3"

[package.extras]
email = ["email-validator (>=1.0.3)"]
dotenv = ["python-dotenv (>=0.10.4)"]

[[package]]
name = "pydata-google-auth"
version = "1.4.0"
description = "PyData helpers for authenticating to Google APIs"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
google-auth = {version = ">=1.25.0,<3.0dev", markers = "python_version >= \"3.6\""}
google-auth-oauthlib = {version = ">=0.4.0", markers = "python_version >= \"3.6\""}

[[package]]
name = "pyparsing"
version = "3.0.7"
description = "Python parsing module"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
diagrams = ["railroad-diagrams", "jinja2"]

[[package]]
name = "pytest"
version = "7.1.2"
description = "pytest: simple powerful testing with Python"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
atomicwrites = {version = ">=1.0", markers = "sys_platform == \"win32\""}
attrs = ">=19.2.0"
colorama = {version = "*", markers = "sys_platform == \"win32\""}
iniconfig = "*"
packaging = "*"
pluggy = ">=0.12,<2.0"
py = ">=1.8.2"
tomli = ">=1.0.0"

[package.extras]
testing = ["xmlschema", "requests", "pygments (>=2.7.2)", "nose", "mock", "hypothesis (>=3.56)", "argcomplete"]

[[package]]
name = "python-dateutil"
version = "2.8.2"
description = "Extensions to the standard Python datetime module"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"

[package.dependencies]
six = ">=1.5"

[[package]]
name = "pytz"
version = "2022.1"
description = "World timezone definitions, modern and historical"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pytzdata"
version = "2020.1"
description = "The Olson timezone database for Python."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "pyyaml"
version = "6.0"
description = "YAML parser and emitter for Python"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "requests"
version = "2.27.1"
description = "Python HTTP for Humans."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*"

[package.dependencies]
certifi = ">=2017.4.17"
charset-normalizer = {version = ">=2.0.0,<2.1.0", markers = "python_version >= \"3\""}
idna = {version = ">=2.5,<4", markers = "python_version >= \"3\""}
urllib3 = ">=1.21.1,<1.27"

[package.extras]
use_chardet_on_py3 = ["chardet (>=3.0.2,<5)"]
socks = ["win-inet-pton", "PySocks (>=1.5.6,!=1.5.7)"]

[[package]]
name = "requests-oauthlib"
version = "1.3.1"
description = "OAuthlib authentication support for Requests."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
oauthlib = ">=3.0.0"
requests = ">=2.0.0"

[package.extras]
rsa = ["oauthlib[signedtoken] (>=3.0.0)"]

[[package]]
name = "rsa"
version = "4.8"
description = "Pure-Python RSA implementation"
category = "main"
optional = false
python-versions = ">=3.6,<4"

[package.dependencies]
pyasn1 = ">=0.1.3"

[[package]]
name = "setuptools-scm"
version = "6.4.2"
description = "the blessed package to manage your versions by scm tags"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
packaging = ">=20.0"
tomli = ">=1.0.0"

[package.extras]
toml = ["setuptools (>=42)"]
test = ["virtualenv (>20)", "pytest (>=6.2)"]

[[package]]
name = "siuba"
version = "0.3.0"
description = "A package for quick, scrappy analyses with pandas and SQL"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
numpy = ">=1.12.0"
pandas = ">=0.24.0"
PyYAML = ">=3.0.0"
SQLAlchemy = ">=1.2.19"

[package.extras]
test = ["hypothesis", "pytest"]
docs = ["gapminder (==0.1)", "jupytext", "nbsphinx", "sphinx", "nbval", "jupyter", "plotnine"]

[[package]]
name = "six"
version = "1.16.0"
description = "Python 2 and 3 compatibility utilities"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "smart-open"
version = "5.2.1"
description = "Utils for streaming large files (S3, HDFS, GCS, Azure Blob Storage, gzip, bz2...)"
category = "main"
optional = false
python-versions = ">=3.6,<4.0"

[package.extras]
all = ["boto3", "google-cloud-storage", "azure-storage-blob", "azure-common", "azure-core", "requests"]
azure = ["azure-storage-blob", "azure-common", "azure-core"]
gcs = ["google-cloud-storage"]
http = ["requests"]
s3 = ["boto3"]
test = ["boto3", "google-cloud-storage", "azure-storage-blob", "azure-common", "azure-core", "requests", "moto[server] (==1.3.14)", "pathlib2", "responses", "paramiko", "parameterizedtestcase", "pytest", "pytest-rerunfailures"]
webhdfs = ["requests"]

[[package]]
name = "sqlalchemy"
version = "1.4.27"
description = "Database Abstraction Library"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,>=2.7"

[package.dependencies]
greenlet = {version = "!=0.4.17", markers = "python_version >= \"3\" and (platform_machine == \"aarch64\" or platform_machine == \"ppc64le\" or platform_machine == \"x86_64\" or platform_machine == \"amd64\" or platform_machine == \"AMD64\" or platform_machine == \"win32\" or platform_machine == \"WIN32\")"}

[package.extras]
aiomysql = ["greenlet (!=0.4.17)", "aiomysql"]
aiosqlite = ["typing_extensions (!=3.10.0.1)", "greenlet (!=0.4.17)", "aiosqlite"]
asyncio = ["greenlet (!=0.4.17)"]
asyncmy = ["greenlet (!=0.4.17)", "asyncmy (>=0.2.3)"]
mariadb_connector = ["mariadb (>=1.0.1)"]
mssql = ["pyodbc"]
mssql_pymssql = ["pymssql"]
mssql_pyodbc = ["pyodbc"]
mypy = ["sqlalchemy2-stubs", "mypy (>=0.910)"]
mysql = ["mysqlclient (>=1.4.0,<2)", "mysqlclient (>=1.4.0)"]
mysql_connector = ["mysql-connector-python"]
oracle = ["cx_oracle (>=7,<8)", "cx_oracle (>=7)"]
postgresql = ["psycopg2 (>=2.7)"]
postgresql_asyncpg = ["greenlet (!=0.4.17)", "asyncpg"]
postgresql_pg8000 = ["pg8000 (>=1.16.6)"]
postgresql_psycopg2binary = ["psycopg2-binary"]
postgresql_psycopg2cffi = ["psycopg2cffi"]
pymysql = ["pymysql (<1)", "pymysql"]
sqlcipher = ["sqlcipher3-binary"]

[[package]]
name = "sqlalchemy-bigquery"
version = "1.4.4"
description = "SQLAlchemy dialect for BigQuery"
category = "main"
optional = false
python-versions = ">=3.6, <3.11"

[package.dependencies]
future = "*"
google-api-core = ">=1.31.5,<2.0.0 || >2.3.0,<3.0.0dev"
google-auth = ">=1.25.0,<3.0.0dev"
google-cloud-bigquery = ">=2.25.2,<4.0.0dev"
google-cloud-bigquery-storage = ">=2.0.0,<3.0.0dev"
pyarrow = ">=3.0.0,<7.0dev"
sqlalchemy = ">=1.2.0,<=1.4.27"

[package.extras]
tests = ["pytz", "packaging"]
geography = ["shapely", "geoalchemy2"]
all = ["packaging", "geoalchemy2", "pytz", "shapely", "alembic"]
alembic = ["alembic"]

[[package]]
name = "tomli"
version = "2.0.1"
description = "A lil' TOML parser"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "tqdm"
version = "4.64.0"
description = "Fast, Extensible Progress Meter"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,>=2.7"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[package.extras]
telegram = ["requests"]
slack = ["slack-sdk"]
notebook = ["ipywidgets (>=6)"]
dev = ["wheel", "twine", "py-make (>=0.1.0)"]

[[package]]
name = "typer"
version = "0.4.0"
description = "Typer, build great CLIs. Easy to code. Based on Python type hints."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
click = ">=7.1.1,<9.0.0"

[package.extras]
test = ["isort (>=5.0.6,<6.0.0)", "black (>=19.10b0,<20.0b0)", "mypy (==0.910)", "pytest-sugar (>=0.9.4,<0.10.0)", "pytest-xdist (>=1.32.0,<2.0.0)", "coverage (>=5.2,<6.0)", "pytest-cov (>=2.10.0,<3.0.0)", "pytest (>=4.4.0,<5.4.0)", "shellingham (>=1.3.0,<2.0.0)"]
doc = ["markdown-include (>=0.5.1,<0.6.0)", "mkdocs-material (>=5.4.0,<6.0.0)", "mkdocs (>=1.1.2,<2.0.0)"]
dev = ["flake8 (>=3.8.3,<4.0.0)", "autoflake (>=1.3.1,<2.0.0)"]
all = ["shellingham (>=1.3.0,<2.0.0)", "colorama (>=0.4.3,<0.5.0)"]

[[package]]
name = "types-protobuf"
version = "3.19.22"
description = "Typing stubs for protobuf"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "types-tqdm"
version = "4.64.4"
description = "Typing stubs for tqdm"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "typing-extensions"
version = "4.1.1"
description = "Backported and Experimental Type Hints for Python 3.6+"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "urllib3"
version = "1.26.9"
description = "HTTP library with thread-safe connection pooling, file post, and more."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4"

[package.extras]
socks = ["PySocks (>=1.5.6,!=1.5.7,<2.0)"]
secure = ["ipaddress", "certifi", "idna (>=2.0.0)", "cryptography (>=1.3.4)", "pyOpenSSL (>=0.14)"]
brotli = ["brotlipy (>=0.6.0)", "brotli (>=1.0.9)", "brotlicffi (>=0.8.0)"]

[[package]]
name = "yappi"
version = "1.3.3"
description = "Yet Another Python Profiler"
category = "main"
optional = false
python-versions = "*"

[package.extras]
test = ["gevent (>=20.6.2)"]

[[package]]
name = "yarl"
version = "1.7.2"
description = "Yet another URL library"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
idna = ">=2.0"
multidict = ">=4.0"

[metadata]
lock-version = "1.1"
python-versions = ">=3.8,<3.10"
content-hash = "00fffdc9cf2b951c619dd60e2a92478bd075be07e999f4858053c770c0ca8bbc"

[metadata.files]
aiohttp = []
aiosignal = []
async-timeout = []
atomicwrites = []
attrs = []
backoff = []
black = []
cachetools = []
calitp = []
certifi = []
charset-normalizer = []
click = []
colorama = []
cycler = []
decorator = []
fonttools = []
frozenlist = []
fsspec = []
future = []
gcsfs = []
google-api-core = []
google-auth = []
google-auth-oauthlib = []
google-cloud-bigquery = []
google-cloud-bigquery-storage = []
google-cloud-core = []
google-cloud-storage = []
google-crc32c = []
google-resumable-media = []
googleapis-common-protos = []
greenlet = []
grpcio = []
gtfs-realtime-bindings = []
humanize = []
idna = []
iniconfig = []
isort = []
jinja2 = []
kiwisolver = []
markupsafe = []
matplotlib = []
memory-profiler = []
multidict = []
mypy = []
mypy-extensions = []
numpy = []
oauthlib = []
packaging = []
pandas = []
pandas-gbq = []
pathspec = []
pathy = []
pendulum = []
pillow = []
platformdirs = []
pluggy = []
proto-plus = []
protobuf = []
psutil = []
py = []
pyarrow = []
pyasn1 = []
pyasn1-modules = []
pydantic = []
pydata-google-auth = []
pyparsing = []
pytest = []
python-dateutil = []
pytz = []
pytzdata = []
pyyaml = []
requests = []
requests-oauthlib = []
rsa = []
setuptools-scm = []
siuba = []
six = []
smart-open = []
sqlalchemy = []
sqlalchemy-bigquery = []
tomli = []
tqdm = []
typer = []
types-protobuf = []
types-tqdm = []
typing-extensions = []
urllib3 = []
yappi = []
yarl = []
