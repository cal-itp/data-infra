[kustomize:kubernetes/apps/overlays/gtfs-rt-archiver-v3-test]

diff -u -N /tmp/LIVE-952648320/apps.v1.Deployment.gtfs-rt-v3-test.gtfs-rt-archiver-consumer /tmp/MERGED-629306134/apps.v1.Deployment.gtfs-rt-v3-test.gtfs-rt-archiver-consumer
--- /tmp/LIVE-952648320/apps.v1.Deployment.gtfs-rt-v3-test.gtfs-rt-archiver-consumer	2023-06-16 18:59:11.801141009 +0000
+++ /tmp/MERGED-629306134/apps.v1.Deployment.gtfs-rt-v3-test.gtfs-rt-archiver-consumer	2023-06-16 18:59:11.801141009 +0000
@@ -6,7 +6,7 @@
     kubectl.kubernetes.io/last-applied-configuration: |
       {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"name":"gtfs-rt-archiver-consumer"},"name":"gtfs-rt-archiver-consumer","namespace":"gtfs-rt-v3-test"},"spec":{"replicas":1,"selector":{"matchLabels":{"name":"gtfs-rt-archiver-consumer"}},"strategy":{"type":"Recreate"},"template":{"metadata":{"annotations":{"prometheus.io/port":"9102","prometheus.io/scrape":"true"},"labels":{"name":"gtfs-rt-archiver-consumer"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"resource-domain","operator":"In","values":["gtfsrtv3"]}]}]}},"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"name","operator":"In","values":["gtfs-rt-archiver-consumer"]}]},"topologyKey":"kubernetes.io/hostname"},"weight":100}]}},"containers":[{"args":["-m","gtfs_rt_archiver_v3.consumer","--load-env-secrets"],"command":["python"],"envFrom":[{"configMapRef":{"name":"archiver-app-vars"}},{"configMapRef":{"name":"archiver-channel-vars"}},{"secretRef":{"name":"gtfs-feed-secrets"}}],"image":"ghcr.io/cal-itp/data-infra/gtfs-rt-archiver:2023.6.7","imagePullPolicy":"Always","lifecycle":{"preStop":{"exec":{"command":["kill","-2","1"]}}},"livenessProbe":{"exec":{"command":["python","-m","gtfs_rt_archiver_v3.liveness","fetch"]},"initialDelaySeconds":30,"periodSeconds":30},"name":"app","resources":{"limits":{"memory":"1Gi"},"requests":{"cpu":1,"memory":"512Mi"}},"volumeMounts":[{"mountPath":"/secrets/gtfs-feed-secrets","name":"gtfs-feed-secrets"}]}],"terminationGracePeriodSeconds":5,"tolerations":[{"effect":"NoSchedule","key":"resource-domain","operator":"Equal","value":"gtfsrtv3"}],"volumes":[{"name":"gtfs-feed-secrets","secret":{"secretName":"gtfs-feed-secrets"}}]}}}}
   creationTimestamp: "2022-09-15T17:36:32Z"
-  generation: 106
+  generation: 107
   labels:
     name: gtfs-rt-archiver-consumer
   name: gtfs-rt-archiver-consumer
@@ -15,7 +15,7 @@
   uid: 790576e1-b9ae-4cc5-8bf6-5fcf5e2011ef
 spec:
   progressDeadlineSeconds: 600
-  replicas: 1
+  replicas: 2
   revisionHistoryLimit: 10
   selector:
     matchLabels:
[helm:postgresql-backup=kubernetes/apps/charts/postgresql-backup]

diff -u -N /tmp/LIVE-2108413473/batch.v1.CronJob.metabase-test.postgresql-backup /tmp/MERGED-4128958279/batch.v1.CronJob.metabase-test.postgresql-backup
--- /tmp/LIVE-2108413473/batch.v1.CronJob.metabase-test.postgresql-backup	2023-06-16 18:59:20.101110824 +0000
+++ /tmp/MERGED-4128958279/batch.v1.CronJob.metabase-test.postgresql-backup	2023-06-16 18:59:20.101110824 +0000
@@ -5,7 +5,7 @@
     meta.helm.sh/release-name: postgresql-backup
     meta.helm.sh/release-namespace: metabase-test
   creationTimestamp: "2023-06-16T16:48:46Z"
-  generation: 1
+  generation: 2
   labels:
     app.kubernetes.io/managed-by: Helm
     name: database-backup
@@ -29,6 +29,10 @@
           - args:
             - |2

+
+              wget -q -O - https://healthchecks.ops.k8s.jarv.us/ping/ff63f290-fe1c-4011-8405-0ba8b2636ea0/start || echo "Failed to ping start"
+
+
               # snapshot current database
               echo "Snapshotting Database"
               pg_dumpall --clean \
@@ -38,6 +42,8 @@
                   --stdin \
                   --stdin-filename pg_dumpall.sql.gz

+              sql_snapshot_status=$?
+
               # prune aged snapshots
               echo "Pruning aged snapshots"
               restic forget \
@@ -45,6 +51,22 @@
                 --keep-last 36 \
                 --keep-daily 7 \
                 --keep-weekly 52
+
+              prune_status=$?
+
+
+              backup_status=0
+
+              if [ $sql_snapshot_status -ne 0 ]; then
+                echo "Reporting failure: SQL snapshot"
+                backup_status=1
+              elif [ $prune_status -ne 0 ]; then
+                echo "Reporting failure: Prune"
+                backup_status=2
+              fi
+
+
+              wget -q -O - https://healthchecks.ops.k8s.jarv.us/ping/ff63f290-fe1c-4011-8405-0ba8b2636ea0/${backup_status} || echo "Failed to ping job end"
             command:
             - /bin/bash
             - -c
