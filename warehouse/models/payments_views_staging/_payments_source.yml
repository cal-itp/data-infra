version: 2

sources:
  - name: payments
    description: Source data from Littlepay data feeds
    database: "{{ env_var('DBT_SOURCE_DATABASE', var('SOURCE_DATABASE')) }}"
    schema: payments
    tables:
      - name: authorisations
        description: |
          Authorisations represent the communication with the acquirer that is
          not a settlement. As part of this process, Littlepay performs
          verification with the acquirer to check if a card is valid and has
          sufficient funds to complete the transaction, which is based on the
          cardholder scheme prerequisites.

          Each row of data in the authorisation table represents a communication
          with the acquirer that is represented by the `request_type`.
        columns:
          - &authorisations_participant_id
            name: participant_id
            description: Identifies the participant that the authorisation belongs to.
          - &authorisations_aggregation_id
            name: aggregation_id
            description: The aggregation that is being authorised. A single aggregation can have multiple authorisations. The authorisations that are submitted depend on the scheme and the result of the initial authorisation (if declined, debt recovery authorisations may be performed).
          - &authorisations_acquirer_id
            name: acquirer_id
            description: The institution that acquired the transaction
          - &authorisations_request_type
            name: request_type
            description: One of (`Card_Check`, `Authorisation`, `Debt Recovery`)
          - &authorisations_transaction_amount
            name: transaction_amount
            description: The amount to authorise
          - &authorisations_currency_code
            name: currency_code
            description: The ISO 4217 numeric currency code for the amount to authorise
          - &authorisations_retrieval_reference_number
            name: retrieval_reference_number
          - &authorisations_response_code
            name: response_code
            description: Response code - varies based on acquirer and scheme. Generally `00` if successful.
          - &authorisations_status
            name: status
            description: Status of authorisation. One of (`Authorised`, `Declined`, `Failed`, `Invalid`, `Lost`, `Stolen`, `Unavailable`, `Unknown`, `Verified`)
          - &authorisations_authorisation_date_time_utc
            name: authorisation_date_time_utc
      - name: customer_funding_source
        description: |
          The customer funding source table represents the information that
          links a customer to the funding source personal identification number
          (PAN) used to perform a tap. In order to uniquely identify a customer,
          the `principal_customer_id` should be used. However, the data only
          updates the `principal_customer_id` per `participant_id`.
        columns:
          - &customer_funding_source_masked_pan
            name: masked_pan
            description: First six and last four numbers of the PAN.
          - &customer_funding_source_issuer_country
            name: issuer_country
            description: Country that the card issuer belongs to.
          - &customer_funding_source_issuer
            name: issuer
            description: Name of the card issuer.
          - &customer_funding_source_funding_source_id
            name: funding_source_id
            description: Unique identifier representing the funding source; a guid internal to Littlepay.
          - &customer_funding_source_customer_id
            name: customer_id
            description: Unique identifier representing the customer that belongs to this customer funding source.
          - &customer_funding_source_card_scheme
            name: card_scheme
            description: Card scheme of this funding source. One of (`VISA`, `MASTERCARD`).
          - &customer_funding_source_bin
            name: bin
            description: First six numbers of the PAN.
          - &customer_funding_source_funding_source_vault_id
            name: funding_source_vault_id
            description: Identifies the funding source (for example, card) that the micropayment will be charged to. This is always the card that was tapped. A registered customer can have multiple funding sources linked to them.
          - &customer_funding_source_form_factor
            name: form_factor
            description: Form factor describing the contactless EMV device of the funding source.
          - &customer_funding_source_principal_customer_id
            name: principal_customer_id
            description: The customer ID that the system initially creates when a new credit card has been identified.
          - &customer_funding_source_participant_id
            name: participant_id
            description: The participant ID that uniquely identifies each participant.
      - name: device_transaction_purchases
        description: |
          Device transaction purchases represent purchase data related to the tap completed by the customer's purchase.
        columns:
          - &device_transaction_purchases_littlepay_transaction_id
            name: littlepay_transaction_id
            description: Unique tap ID generated by Littlepay upon receipt of a tap to the Device API.
          - &device_transaction_purchases_purchase_id
            name: purchase_id
            description: Unique identifier for the purchase. For example, a ticket ID assigned by the device.
          - &device_transaction_purchases_correlated_purchase_id
            name: correlated_purchase_id
            description: The purchase_id for the tap on when this is a variable fare tap off.
          - &device_transaction_purchases_product_id
            name: product_id
            description: |
              The product ID configured in the Merchant Portal. Possible values are `retail` or `flat fare`.

              When the `product_id` is represented with `retail`, transactions for one or more tickets are purchased by a single tap and when an autoscan transaction
              is performed this will be represented by a flat fare or variable fare.

              Autoscan is a 'tap and go' transaction where a cardholder taps their card on a device without any pre-interaction with driver or point-of-sale devices that
              are connected to the device
          - &device_transaction_purchases_description
            name: description
            description: Description of the type of fare purchase, if defined from the Merchant Portal.
          - &device_transaction_purchases_indicative_amount
            name: indicative_amount
            description: The value of the purchase. The value may be adjusted by capping rules or tap-off.
          - &device_transaction_purchases_transaction_time
            name: transaction_time
            description: The time transaction was created.
      - name: device_transactions
        description: |
          Device transactions represent a 'tap' of a customer identifier, such
          as a credit card or phone, on a physical device. Data for this report
          is received via Device API (i.e., from the PAD vendors).

          The data within the device transaction table summarises key
          information about the tap, the device the user tapped, the location of
          the device, and the type of fare attributed to the transaction.

          > **Notes**
          >
          > When a device is configured to use variable fares, the customer will
          > need to tap on at the start of their trip and tap off at the end of
          > their trip to get the best fare. If the device is configured to use
          > flat fares, then the customer will only need to tap the device once
          > to start their trip.
        columns:
          - &device_transactions_customer_id
            name: customer_id
            description: The unique identifier of the customer that performed the transaction.
          - &device_transactions_device_id
            name: device_id
            description: The unique identifier of the device that was tapped.
          - &device_transactions_device_id_issuer
            name: device_id_issuer
            description: The entity that issued the device ID.
          - &device_transactions_device_transaction_id
            name: device_transaction_id
            description: The unique identifier for the transaction allocated by the device.
          - &device_transactions_granted_zone_ids
            name: granted_zone_ids
            description: ""
          - &device_transactions_latitude
            name: latitude
            description: |
              The latitude of the vehicle, in decimal degrees, where the device transaction took place.

              If the device does not support GPS, then this field will not be included.
          - &device_transactions_littlepay_transaction_id
            name: littlepay_transaction_id
            description: Unique tap ID generated by Littlepay upon receipt of a tap to the Device API.
          - &device_transactions_location_id
            name: location_id
            description: The identifier of the location where the transaction occurred.
          - &device_transactions_location_name
            name: location_name
            description: The title of the location where the transaction occurred.
          - &device_transactions_location_scheme
            name: location_scheme
            description: The scheme used for the location identifier.
          - &device_transactions_longitude
            name: longitude
            description: |
              The longitude of the vehicle, in decimal degrees, where the device transaction took place.

              If the device does not support GPS, then this field will not be included.
          - &device_transactions_mode
            name: mode
            description: |
              The mode of transport.

              Possible values are `bus` and `train`.
          - &device_transactions_onward_zone_ids
            name: onward_zone_ids
            description: ""
          - &device_transactions_participant_id
            name: participant_id
            description: The unique identifier of the participant that the device belongs to.
          - &device_transactions_route_id
            name: route_id
            description: The route identifier provided by the device.
          - &device_transactions_transaction_date_time_utc
            name: transaction_date_time_utc
            description: The date and time that the customer tapped on the device.
          - &device_transactions_transaction_deny_reason
            name: transaction_deny_reason
            description: |
              The reason a transaction was denied.

              Possible values:
              * `EMV online requested`
              * `EMV decline`
              * `Card on deny list`
              * `Card not on pilot list`
          - &device_transactions_transaction_outcome
            name: transaction_outcome
            description: |
              The outcome of the transaction as determined by the device, taking into account all inputs, such as the EMV reader outcome and card lists.

              Possible values are `allow` or `deny`. A value of `allow` means the customer was allowed to travel, whereas a value of `deny` means the customer was denied travel.
          - &device_transactions_type
            name: type
            description: |
              The type of transaction. The value depends on whether the device is configured for flat or variable fares.

              Possible values:
              * `single`
              * `on`
              * `off`

              For flat fares, only a tap of type `single` is submitted when the customer starts their trip. For variable fares, a tap of type `on` is submitted when the customer starts their trip, and a tap of type `off` is typically submitted when the customer ends their trip. For customers using Back Office API, taps are always considered `single`.
          - &device_transactions_vehicle_id
            name: vehicle_id
            description: An identifier for the vehicle the transaction took place on. This ID is unique to the participant.
          - &device_transactions_zone_id
            name: zone_id
            description: The zone identifier provided by the device.
      - name: micropayment_adjustments
        description: |
          A micropayment adjustment represents a micropayment that has had an
          amount adjusted down by a product. A micropayment can include multiple
          adjustments, such as a daily cap or weekly cap. However, only one
          adjustment will ever be applied.

          Littlepay stores a record of all adjustments to a micropayment.
          However, the data feed will only include adjustments that were
          applied.
        columns:
          - &micropayment_adjustments_adjustment_id
            name: adjustment_id
            description: Uniquely identifies the adjustment.
          - &micropayment_adjustments_micropayment_id
            name: micropayment_id
            description: Identifies the micropayment that the adjustment belongs to.
          - &micropayment_adjustments_participant_id
            name: participant_id
            description: Identifies the participant that the adjustment belongs to.
          - &micropayment_adjustments_customer_id
            name: customer_id
            description: Identifies the customer that the adjustment belongs to.
          - &micropayment_adjustments_product_id
            name: product_id
            description: Identifies the product that was used to adjust the micropayment.
          - &micropayment_adjustments_type
            name: type
            description: |
              The type of product / rule that created the adjustment. Additional values may be added over time.

              Possible values:
              * `MULTI_DAY_CAP`
              * `DAILY_CAP`
              * `WEEKLY_CAP`
          - &micropayment_adjustments_description
            name: description
            description: General description of the reason the adjustment was created.
          - &micropayment_adjustments_amount
            name: amount
            description: The amount deducted from the `nominal_amount` to arrive at the `charge_amount` for the micropayment being adjusted.
          - &micropayment_adjustments_time_period_type
            name: time_period_type
            description: |
              Indicates whether the travel was determined to have occurred during a peak or off-peak period for the purposes of capping.

              Possible values are `PEAK` and `OFFPEAK`.
          - &micropayment_adjustments_applied
            name: applied
            description: If `TRUE`, then the adjustment to the micropayment has been applied.
          - &micropayment_adjustments_incentive_product_id
            name: incentive_product_id
            description: |
              The ID of the product with the incentive that was applied to micropayments.

              Same ID as `product_id`.
      - name: micropayment_device_transactions
        description: |
          Micropayment device transactions can be mapped to a single
          micropayment. This is common with variable fare and mobility and
          transport transaction (MTT) environments.
        columns:
          - &micropayment_device_transactions_littlepay_transaction_id
            name: littlepay_transaction_id
            description: |
              Transaction identifier assigned by Littlepay.

              For 'tap on, tap off' integrations, merchants will see two transactions for each micropayment.
          - &micropayment_device_transactions_micropayment_id
            name: micropayment_id
            description: The micropayment that the transaction is associated with.
      - name: micropayments
        description: |
          A micropayment represents a debit or credit that is made against the
          customer's funding source for a trip. Multiple micropayments can be
          aggregated and settled together. Credit micropayments can be created
          if a refund is requested for the travel associated with a debit
          micropayment, and before the aggregation containing the debit
          micropayment is settled.
        columns:
          - &micropayments_micropayment_id
            name: micropayment_id
            description: Uniquely identifies the micropayment.
          - &micropayments_aggregation_id
            name: aggregation_id
            description: Identifies the aggregation that the micropayment belongs to.
          - &micropayments_participant_id
            name: participant_id
            description: Identifies the participant that the micropayment belongs to.
          - &micropayments_customer_id
            name: customer_id
            description: Identifies the customer that the micropayment belongs to.
          - &micropayments_funding_source_vault_id
            name: funding_source_vault_id
            description: |
              Identifies the funding source (for example, card) that the micropayment will be charged to. This is always the card that was tapped.

              A registered customer can have multiple funding sources linked to it. This field can be used to join to the `customer_funding_source` feed.
          - &micropayments_transaction_time
            name: transaction_time
            description: |
              The date and time when the micropayment was created.

              For variable fare (tap on/tap off), the micropayment will not be created until the tap off occurs.

              The date reflects the processing time by Littlepay, rather than the event time; that is, when the related taps occurred.
          - &micropayments_payment_liability
            name: payment_liability
            description: |
              Indicates who would be liable to absorb the cost if the micropayment was declined by the issuer when an authorisation is attempted.

              Possible values are `ISSUER` or `OPERATOR`.
          - &micropayments_charge_amount
            name: charge_amount
            description: The amount that will be credited to or debited from the funding source. This may be lower than the nominal amount if adjustments have been applied. nominal_amount Decimal The amount that would be charged if no adjustments were to be applied.
          - &micropayments_currency_code
            name: currency_code
            description: ISO 4217 numeric code representing the currency that the `charge_amount` and `nominal_amount` are denominated in.
          - &micropayments_type
            name: type
            description: |
              Indicates the type of fare that the micropayment charge represents.

              Transaction type. Possible values are `CREDIT` or `DEBIT`. The value Will be `DEBIT` if `charge_amount >= 0.00`
          - &micropayments_charge_type
            name: charge_type
            description: |
              Possible values:
              * `RETAIL_FARE`
              * `FLAT_FARE`
              * `COMPLETE_VARIABLE_FARE`
              * `INCOMPLETE_VARIABLE_FARE`
              * `REFUND`
      - name: product_data
        description: Information about a price-adjusting product.
        columns:
          - &product_data_participant_id
            name: participant_id
            description: Identifies the participant that the micropayment belongs to.
          - &product_data_product_id
            name: product_id
            description: Identifies the product that was used to adjust the micropayment.
          - &product_data_previous_version_id
            name: previous_version_id
            description: Refers to the previous version ID of the product
          - &product_data_original_version_id
            name: original_version_id
            description: |
              Refers to the original version ID of the product.

              The `original_version_id` may differs from the `previous_version_id` if the product has been updated more than once.
          - &product_data_product_code
            name: product_code
            description: The code specified in the Merchant Portal against the product.
          - &product_data_product_description
            name: product_description
            description: The description specified in the Merchant Portal during the product creation.
          - &product_data_product_type
            name: product_type
            description: |
              The name of the product type.

              Possible values:
              * `CAPPING`
              * `DISCOUNT`
              * `PURCHASE`
          - &product_data_activation_type
            name: activation_type
            description: The type of customers the product will be actioned for.
          - &product_data_product_status
            name: product_status
            description: |
              The status of the product as set in the Merchant Portal.

              Possible values:
              * `ACTIVE`
              * `INACTIVE`
              * `EXPIRED`
          - &product_data_superseded
            name: superseded
            description: If `true`, indicates that the product version is obsolete as a new version of the product is in use.
          - &product_data_created_date
            name: created_date
            description: The date the product was created in the Merchant Portal.
          - &product_data_capping_type
            name: capping_type
            description: |
              Type of capping assigned to the product.

              Possible values:
              * `Daily Capping`
              * `Weekly Capping`
              * `Multi Day Capping`
              * `Time Based Capping`
          - &product_data_multi_operator
            name: multi_operator
            description: If `TRUE`, indicates that the product falls under a multi-operator scheme.
          - &product_data_rules_default_limit
            name: rules_default_limit
            description: Maximum capping limit for the product.
          - &product_data_rules_max_fare_value
            name: rules_max_fare_value
            description: Maximum fare value used. Anything exceeding this value is not included in capping.
          - &product_data_rules_transaction_types
            name: rules_transaction_types
            description: |
              This list the type of transaction that can be applied to this product.

              Possible values:
              * `Autoscan`
              * `Variable`
              * `Flat`
          - &product_data_capping_start_time
            name: capping_start_time
            description: Indicates capping start time. This is used when the capping product has a specific start time.
          - &product_data_capping_end_time
            name: capping_end_time
            description: Indicates capping end time. This is used when the capping product has a specific end time.
          - &product_data_all_day
            name: all_day
            description: If set to `1`, indicates that the capping product is in effect for the entire day.
          - &product_data_weekly_cap_start_day
            name: weekly_cap_start_day
            description: |
              Indicates the start day of the product's weekly cap.

              Possible values are `SUNDAY` or `MONDAY`.
          - &product_data_weekly_cap_end_day
            name: weekly_cap_end_day
            description: |
              Indicates the end day of the product's weekly cap.

              Possible values are `SATURDAY` or `SUNDAY`.
          - &product_data_number_of_days_in_cap_window
            name: number_of_days_in_cap_window
            description: This is the number of days in the capping window set against the product.
          - &product_data_capping_duration
            name: capping_duration
            description: The duration of time after the customer initially taps where future taps are not charged.
          - &product_data_number_of_transfer
            name: number_of_transfer
            description: The number of free transfers after the initial tap.
          - &product_data_capping_time_zone
            name: capping_time_zone
            description: The time zone where the capping product was used.
          - &product_data_capping_overlap
            name: capping_overlap
            description: The time a customer can overlap within a 24-hour period.
          - &product_data_capping_application_level
            name: capping_application_level
            description: This is the customer level tapping as customers can have multiple cards (physical / digital).
          - &product_data_scheduled_start_date_time
            name: scheduled_start_date_time
            description: Expected Blank
          - &product_data_scheduled_end_date_time
            name: scheduled_end_date_time
            description: Expected Blank
          - &product_data_route_capping_enabled
            name: route_capping_enabled
            description: If `true`, route capping is enabled.
          - &product_data_routes
            name: routes
            description: List of routes that apply to the product.
          - &product_data_zoned_capping_enabled
            name: zoned_capping_enabled
            description: If `true`, zoned capping is enabled.
          - &product_data_zoned_capping_mode
            name: zoned_capping_mode
            description: |
              Defines how the zones are mapped relative to one another.

              Possible values:
              * `Concentric` — Zones start from an inner zone and expand outwards with each new zone.
              * `Nonconcentric` — Zones are next to each other and do not overlap.
          - &product_data_zoned_capping_pricing_type
            name: zoned_capping_pricing_type
            description: |
              Defines which pricing period applies to the product.

              Possible values are `PEAK` or `OFFPEAK`.
          - &product_data_on_peak_zones
            name: on_peak_zones
            description: JSON object that defines the rules for the peak zones.
          - &product_data_off_peak_zones
            name: off_peak_zones
            description: JSON object that defines the rules for the off-peak zones
          - &product_data_incentive_enabled
            name: incentive_enabled
            description: If `true`, an incentive is enabled on the product.
          - &product_data_incentive_type
            name: incentive_type
            description: |
              The type of the incentive associated to the product.

              Possible values are `DAILY_CAP` or `CUMULATIVE_CAP`.
          - &product_data_discount_qualifier
            name: discount_qualifier
            description: |
              The type of qualifier that gives eligibility to the product.

              Possible values are `CAP_REACHED` or `SINGLE_TRIP`.
          - &product_data_configuration
            name: configuration
            description: |
              Configuration type for the incentive.
              Possible values are `DAILY_TABLE` or `ZONE_TRIANGLE`.
      - name: refunds
        description: |
          Refunds may be requested by a merchant customer for a given debit
          micropayment; for example, providing a refund for a trip. Refunds
          requested by a customer require approval by the merchant.

          If the aggregation containing the micropayment is still open, then a
          credit micropayment will be created and added to the aggregation.

          If the aggregation containing the micropayment has already been
          settled and had not been rejected, the settlement of the refund amount
          is requested directly using the original `transaction_id` from the
          settlement result for the aggregation, and no credit micropayment is
          created.
        columns:
          - &refunds_refund_id
            name: refund_id
            description: The unique identifier for each requested refund.
          - &refunds_aggregation_id
            name: aggregation_id
            description: |
              The aggregation that is being authorised.

              A single aggregation can have multiple authorisations. The
              authorisations that are submitted depend on the scheme and the result
              of the initial authorisation. For example, if an authorisation is declined,
              then a debt recovery authorisation may be performed.
          - &refunds_participant_id
            name: participant_id
            description: Identifies the participant that the micropayment belongs to.
          - &refunds_customer_id
            name: customer_id
            description: Identifies the customer that the micropayment belongs to.
          - &refunds_micropayment_id
            name: micropayment_id
            description: Uniquely identifies the micropayment.
          - &refunds_settlement_id
            name: settlement_id
            description: The unique identifier for each settlement requested to the acquirer.
          - &refunds_refund_amount
            name: refund_amount
            description: The actual amount refunded to the customer.
          - &refunds_currency_code
            name: currency_code
            description: ISO 4217 numeric currency code for the amount that was requested to be settled.
          - &refunds_initiator
            name: initiator
            description: The user who initiated the refund request.
          - &refunds_reason
            name: reason
            description: The reason given for requesting the refund.
          - &refunds_approval_status
            name: approval_status
            description: |
              The status of the approval request.

              If the refund was initiated by the merchant, then the request is automatically approved.

              Possible values are `Approved` or `Pending Approval`.
          - &refunds_settlement_status
            name: settlement_status
            description: |
              The status of the refund.

              Possible values are `Sent for Settlement` or `Settled`.
          - &refunds_retrieval_reference_number
            name: retrieval_reference_number
            description: |
              Uniquely identifies a card transaction, based on the ISO 8583 standard. The value is generated during authorisation.

              If the acquirer is Elavon, this value will be split between `littlepay_reference_number` and `external_reference_number`.
          - &refunds_littlepay_reference_number
            name: littlepay_reference_number
            description: |
              Uniquely identifies a card transaction.

              If the acquirer is Elavon, then this key will contain the first part of the string from `retrieval_reference_number`.
          - &refunds_external_reference_number
            name: external_reference_number
            description: |
              Uniquely identifies a card transaction.

              If the acquirer is Elavon, then this key will contain the second part of the string from `retrieval_reference_number`.
          - &refunds_transaction_date
            name: transaction_date
            description: Settlement transaction date (if micropayment was settled before refund)
          - &refunds_transaction_amount
            name: transaction_amount
            description: The amount of the original fare.
          - &refunds_proposed_amount
            name: proposed_amount
            description: The amount equalling `transaction_amount - refund_amount`.
          - &refunds_issuer
            name: issuer
            description: The user that approved the refund.
          - &refunds_issuer_comment
            name: issuer_comment
            description: This field is not in use.
          - &refunds_created_time
            name: created_time
            description: The time the request was created.
          - &refunds_approved_time
            name: approved_time
            description: The time the approval was processed.
          - &refunds_status
            name: status
            description: |
              The status of the refund.

              Possible values are `SENT_FOR_SETTLEMENT` or `SETTLED`.
          - &refunds_settlement_status_time
            name: settlement_status_time
            description: The time the refund was settled.
          - &refunds_settlement_reason_code
            name: settlement_reason_code
            description: This field is not in use.
          - &refunds_settlement_response_text
            name: settlement_response_text
            description: This field is not in use.
      - name: settlements
        description: |
          A settlement represents the amount of money to be cleared by the
          acquirer from the customers funding source. A settlement type is
          either a credit or debit.
        columns:
          - &settlements_settlement_id
            name: settlement_id
            description: A unique identifier for each settlement.
          - &settlements_participant_id
            name: participant_id
            description: The unique identifier of the participant that the device belongs to.
          - &settlements_aggregation_id
            name: aggregation_id
            description: Identifies the aggregation that the micropayment belongs to.
          - &settlements_customer_id
            name: customer_id
            description: Identifies the customer that the micropayment belongs to.
          - &settlements_funding_source_id
            name: funding_source_id
            description: |
              Identifies the funding source (for example, card) that the micropayment will be charged to. This is always the card that was tapped.

              A registered customer can have multiple funding sources linked to it. This field can be used to join to the `customer_funding_source` feed.
          - &settlements_settlement_type
            name: settlement_type
            description: |
              Type of settlement that occurred. Possible values are `DEBIT` or `CREDIT`.

              If refunding a micropayment that has already been settled, the value will be `CREDIT`.
          - &settlements_transaction_amount
            name: transaction_amount
            description: The settlement amount.
          - &settlements_currency_code
            name: currency_code
            description: ISO 4217 numeric currency code for the amount that was requested to be settled.
          - &settlements_retrieval_reference_number
            name: retrieval_reference_number
            description: |
              Uniquely identifies a card transaction, based on the ISO 8583 standard.

              If the acquirer is Elavon, this value will be split between `littlepay_reference_number` and `external_reference_number`.
          - &settlements_littlepay_reference_number
            name: littlepay_reference_number
            description: |
              Uniquely identifies a card transaction.

              If the acquirer is Elavon, then this key will contain the first part of the string from `retrieval_reference_number`.
          - &settlements_external_reference_number
            name: external_reference_number
            description: |
              Uniquely identifies a card transaction.

              If the acquirer is Elavon, then this key will contain the second part of the string from `retrieval_reference_number`.
          - &settlements_settlement_requested_date_time_utc
            name: settlement_requested_date_time_utc
            description: Timestamp of when the settlement request was submitted to the acquirer.
          - &settlements_acquirer
            name: acquirer
            description: Identifies the acquirer used to settle the transaction.
