version: 2

models:
  - name: fct_daily_schedule_feeds
    description: |
      Each row is a unique date / feed pair, where the feed is the feed version that was in effect at
      noon Pacific Time on that date. This is intended to make it clear what feed version to use
      to analyze a given date.
    columns:
      - name: key
        description: |
          Synthetic primary key constructed from `date` and `feed_key`.
        tests: &primary_key_tests
          - unique
          - not_null
      - name: date
        description: |
          Date on which the given feed was active at noon Pacific Time.
      - &feed_key
        name: feed_key
        description: |
          Foreign key to the `dim_schedule_feeds` table.
        tests:
          - not_null
          - relationships:
              to: ref('dim_schedule_feeds')
              field: key
      - &gtfs_dataset_key_errorif
        name: gtfs_dataset_key
        description: |
          Foreign key to the associated GTFS dataset record.
          Because GTFS data was downloaded in the v1 pipeline before
          `gtfs dataset` records were being archived in the warehouse,
          it is possible for GTFS data to be associated with a GTFS dataset
          record that was not yet in effect at the time the data was downloaded.
          (So, you may see GTFS data from January 2022 associated with a GTFS dataset
          record that does not take effect until July 2022.)
          This is done for convenience to facilitate labeling of older data (the alternative
          would be failing to join and making it essentially impossible to label
          historical GTFS data with any associated transit database records).
        tests:
          - not_null:
              config:
                error_if: ">10000"
          - relationships:
              to: ref('dim_gtfs_datasets')
              field: key
              config:
                # there are a dozen rows of SMART transit which was deleted from Airtable
                # this will work without exception once the Airtable dim is historical;
                # this threshold may need to increase if the backfill occurs prior to that
                error_if: ">20"
      - name: is_future
        description: |
          Boolean indicating whether this date is in the future relative to the last time that the table
          was run. If this is a future date (if is_future is true), any coverage is prospective and
          subject to change.
      - &feed_timezone_no_tests
        name: feed_timezone
        description: '{{ doc("gtfs_schedule_feed_timezone") }}'

  - name: fct_schedule_feed_downloads
    description: |
      Each row is an instance of a download attempt, uniquely identified by base64_url and
      timestamp.
    columns:
      - name: key
        description: |
          Synthetic primary key constructed from `base64_url` and `ts`.
        tests: *primary_key_tests
      - name: feed_key
        description: |
          Foreign key to the `dim_schedule_feeds` table.
        tests:
          - not_null:
              config:
                where: download_success AND unzip_success
          - relationships:
              to: ref('dim_schedule_feeds')
              field: key
      - *gtfs_dataset_key_errorif
      - name: ts
        description: |
          Timestamp at which this feed download attempt occurred.
      - &base64_url
        name: base64_url
        description: |
          Base 64 encoded URL from which this data was scraped.
      - name: download_success
        description: |
          Boolean indicating whether this download attempt was successful.
      - name: download_exception
        description: |
          If download attempt failed, lists the exception that was encountered.
      - name: unzip_success
        description: |
          Boolean indicating whether this unzip attempt was successful.
      - name: unzip_exception
        description: |
          If unzip attempt failed, lists the exception that was encountered.
      - name: zipfile_extract_md5hash
        description: '{{ doc("column_zipfile_md5_hash") }}'
      - name: zipfile_files
        description: '{{ doc("column_zipfile_files") }}'
      - name: zipfile_dirs
        description: '{{ doc("column_zipfile_dirs") }}'

  - name: fct_stop_time_updates
    description: |
      Unnested and de-duped stop time updates.
    columns:
      - name: key
        tests: &almost_unique_rt_key_tests
          - unique_proportion:
              at_least: 0.999
              where: '__rt_sampled__'
          - not_null:
              where: '__rt_sampled__'

  - name: fct_trip_updates_messages
    description: |
      Each row is a message received from a trip updates GTFS RT feed.
      See https://gtfs.org/realtime/reference/#message-tripupdate for information
      about message structure.
      Due to data size, this table **must** be queried with a date filter (like `WHERE dt = 'YYYY-MM-DD'`).
      Hour filters will also further improve performance.
    columns:
      - name: key
        description: |
          Synthetic primary key constructed from `base64_url`, `extract_ts`,
          entity `id`, `vehicle_id`, and `trip_id`.
        tests: *almost_unique_rt_key_tests
      - &gtfs_rt_dataset_key
        name: gtfs_dataset_key
        description: |
          Foreign key to the associated GTFS dataset record.
        tests:
          - not_null:
              config:
                where: '__rt_sampled__'
          - relationships:
              to: ref('dim_gtfs_datasets')
              field: key
              config:
                # there are a dozen rows of SMART transit which was deleted from Airtable
                # this will work without exception once the Airtable dim is historical;
                # this threshold may need to increase if the backfill occurs prior to that
                error_if: ">20"
                where: '__rt_sampled__'
      - name: dt
      - name: hour
      - name: base64_url
      - name: _extract_ts
      - name: _config_extract_ts
      - name: _gtfs_dataset_name
      - name: header_timestamp
      - name: header_incrementality
      - name: header_version
      - name: id
      - name: trip_update_timestamp
      - name: trip_update_delay
      - name: vehicle_id
      - name: vehicle_label
      - name: vehicle_license_plate
      - name: trip_id
      - name: trip_route_id
      - name: trip_direction_id
      - name: trip_start_time
      - name: trip_start_date
      - name: trip_schedule_relationship
      - name: stop_time_updates
      - &_header_message_age
        name: _header_message_age
        description: |
          Difference between `_extract_ts` (time at which we scraped the message) and `header_timestamp` (timestamp
          of overall message from producer; see https://gtfs.org/realtime/reference/#message-feedheader).
          Because of delay in the request process, the actual scrape request may occur up to a few
          seconds after `_extract_ts`, and it may take time for the producer to respond to the request, so
          this field should only be interpreted as accurate within 3-4 seconds (do not try to do extremely precise
          measurements below that level.)
      - name: _trip_update_message_age
        description: |
          Difference between `_extract_ts` (time at which we scraped the message) and `trip_update_timestamp` (timestamp
          of individual trip update message from producer; see https://gtfs.org/realtime/reference/#message-tripupdate).
          Because of delay in the request process, the actual scrape request may occur up to a few
          seconds after `_extract_ts`, and it may take time for the producer to respond to the request, so
          this field should only be interpreted as accurate within 3-4 seconds (do not try to do extremely precise
          measurements below that level.)
      - name: _trip_update_message_age_vs_header
        description: |
          Difference between `header_timestamp` (timestamp of overall message from producer; see https://gtfs.org/realtime/reference/#message-feedheader)
          and `trip_update_timestamp` (timestamp of individual trip_update message from producer; see https://gtfs.org/realtime/reference/#message-tripupdate).

  - name: fct_vehicle_locations
    description: |
      De-duped vehicle positions, removing redundant/duplicated positions
      in the underlying messages. Unique at the url/timestamp/vehicle/trip
      level.
    columns:
      - name: key
        description: |
          Synthetic primary key.
        tests:
          - unique:
              config:
                where: '__rt_sampled__'
          - not_null:
              config:
                where: '__rt_sampled__'
      - name: trip_id
        tests:
          - not_null:
              config:
                where: '__rt_sampled__'

  - name: fct_vehicle_positions_messages
    description: |
      Each row is a message received from a vehicle positions GTFS RT feed.
      See https://gtfs.org/realtime/reference/#message-vehicleposition for information
      about message structure.
      Due to data size, this table **must** be queried with a date filter (like `WHERE dt = 'YYYY-MM-DD'`).
      Hour filters will also further improve performance.
    columns:
      - name: key
        description: |
          Synthetic primary key constructed from `base64_url`, `extract_ts`,
          entity `id`, `vehicle_id`, and `trip_id`.
        tests: *almost_unique_rt_key_tests
      - *gtfs_rt_dataset_key
      - name: dt
        description: |
          Date on which we scraped this message.
          A date filter *must* be provided when querying this table, because of the size of the data.
      - name: hour
        description: |
          Timestamp of the beginning of the hour in which this message was scraped,
          ex. "2022-09-01T00:00:00+00".
      - name: base64_url
        description: |
          URL-safe base64 encoding of the URL from which this message was scraped.
      - name: _extract_ts
        description: |
          Time at which this message was scraped.
      - *_header_message_age
      - name: _vehicle_message_age
        description: |
          Difference in seconds between `_extract_ts` (time at which we scraped the message) and `vehicle_timestamp` (timestamp
          of individual vehicle message from producer; see https://gtfs.org/realtime/reference/#message-vehicleposition).
          Because of delay in the request process, the actual scrape request may occur up to a few
          seconds after `_extract_ts`, and it may take time for the producer to respond to the request, so
          this field should only be interpreted as accurate within 3-4 seconds (do not try to do extremely precise
          measurements below that level.)
      - name: _vehicle_message_age_vs_header
        description: |
          Difference in seconds between `header_timestamp` (timestamp of overall message from producer; see https://gtfs.org/realtime/reference/#message-feedheader)
          and `vehicle_timestamp` (timestamp of individual vehicle message from producer; see https://gtfs.org/realtime/reference/#message-vehicleposition).
      - name: _gtfs_dataset_name
        description: |
          String name of the GTFS dataset of which this message is a part.
          This field is provided for human readability and should not be used as a join key.
      - name: header_timestamp
        description: |
          See: https://gtfs.org/realtime/reference/#message-feedheader.
          Field has been converted to TIMESTAMP type for convenience.
      - name: header_incrementality
        description: |
          See: https://gtfs.org/realtime/reference/#message-feedheader.
      - name: header_version
        description: |
          See: https://gtfs.org/realtime/reference/#message-feedheader.
      - name: id
        description: |
          See: https://gtfs.org/realtime/reference/#message-feedentity.
      - name: current_stop_sequence
        description: |
          See: https://gtfs.org/realtime/reference/#message-vehicleposition.
      - name: stop_id
        description: |
          See: https://gtfs.org/realtime/reference/#message-vehicleposition.
      - name: current_status
        description: |
          See: https://gtfs.org/realtime/reference/#message-vehicleposition.
      - name: vehicle_timestamp
        description: |
          See: https://gtfs.org/realtime/reference/#message-vehicleposition.
          Field has been converted to TIMESTAMP type for convenience.
      - name: congestion_level
        description: |
          See: https://gtfs.org/realtime/reference/#message-vehicleposition.
      - name: occupancy_status
        description: |
          See: https://gtfs.org/realtime/reference/#message-vehicleposition.
      - name: occupancy_percentage
        description: |
          See: https://gtfs.org/realtime/reference/#message-vehicleposition.
      - name: vehicle_id
        description: |
          See: https://gtfs.org/realtime/reference/#message-vehicledescriptor.
      - name: vehicle_label
        description: |
          See: https://gtfs.org/realtime/reference/#message-vehicledescriptor.
      - name: vehicle_license_plate
        description: |
          See: https://gtfs.org/realtime/reference/#message-vehicledescriptor.
      - name: vehicle_wheelchair_accessible
        description: |
          See: https://gtfs.org/realtime/reference/#message-vehicledescriptor.
      - name: trip_id
        description: |
          See: https://gtfs.org/realtime/reference/#message-tripdescriptor.
      - name: trip_route_id
        description: |
          See: https://gtfs.org/realtime/reference/#message-tripdescriptor.
      - name: trip_direction_id
        description: |
          See: https://gtfs.org/realtime/reference/#message-tripdescriptor.
      - name: trip_start_time
        description: |
          See: https://gtfs.org/realtime/reference/#message-tripdescriptor.
      - name: trip_start_date
        description: |
          See: https://gtfs.org/realtime/reference/#message-tripdescriptor.
      - name: trip_schedule_relationship
        description: |
          See: https://gtfs.org/realtime/reference/#message-tripdescriptor.
      - name: position_latitude
        description: |
          See: https://gtfs.org/realtime/reference/#message-position.
      - name: position_longitude
        description: |
          See: https://gtfs.org/realtime/reference/#message-position.
      - name: position_bearing
        description: |
          See: https://gtfs.org/realtime/reference/#message-position.
      - name: position_odometer
        description: |
          See: https://gtfs.org/realtime/reference/#message-position.
      - name: position_speed
        description: |
          See: https://gtfs.org/realtime/reference/#message-position.

  - name: fct_daily_scheduled_trips
    description: |
      A daily table showing all trips that were scheduled on a given date.
      If a `service_date`, `trip_key` pair is present in this table,
      it means that that `trip_key` was scheduled to occur on that `service_date`.
      Specifically, it means that the associated `service_id` was active and had service
      scheduled. Dates where a `service_id` was active but not scheduled (for example,
      weekend dates within a weekday service's effective dates) are not listed in this table.

      The GTFS standard allows for a trip's scheduled stop activity to occur more than 24 hours after the beginning of the
      associated `service_date`. See https://gtfs.org/schedule/reference/#field-types for the GTFS definitions of times and dates.

      Additionally, different feeds use different time zones (see: https://gtfs.org/schedule/reference/#agencytxt
      and https://gtfs.org/schedule/reference/#stopstxt).

      For this reason, this table contains multiple date and time labels associated with a given trip.
      Please consult each individual column's definition for guidance on which field is
      most appropriate for your use case.

    columns:
      - name: key
        tests:
          - unique:
              where: "not contains_warning_duplicate_trip_primary_key"
          - not_null
      - *feed_key
      - name: name
      - name: regional_feed_type
        description: |
          Describes whether this feed is a combined regional feed or has a relation
          to a combined regional feed in some manner.
          For example for MTC 511, the combined regional feed has type "Combined
          Regional Feed", and the MTC-published subfeeds have type "Regional Subfeed".
          If you are performing an analysis where using a regional combined feed is
          inappropriate (even though that is the customer-facing data), this field can
          help you assess other alternative feeds for the same services and organizations.
          Not specified (null) for feeds with no relationship to regional feeds.
      - name: service_date
        description: |
          Agency's service date for which this trip was active.
          See https://gtfs.org/schedule/reference/#field-types
          for the GTFS definitions of times and dates.
          This date is defined with respect to `feed_timezone`.

          This field should be used to:
          * Identify the service date that the agency assigns to this trip
          * Join with other internal-to-GTFS data that is keyed by service date

          This field should not be used to:
          * Filter trip activity by calendar date (because this does not necessarily reflect the local date on which the trip activity actually occurred)
      - name: service_id
        description: |
          Service ID from calendar or calendar_dates that determines that this trip
          has service on this date.
      - name: trip_key
        description: Foreign key to dim_trips.
        tests:
          - relationships:
              to: ref('dim_trips')
              field: key
      - name: trip_id
        description: '{{ doc("gtfs_trips__trip_id") }}'
      - name: trip_short_name
        description: '{{ doc("gtfs_trips__trip_short_name") }}'
      - name: direction_id
        description: '{{ doc("gtfs_trips__direction_id") }}'
      - name: block_id
        description: '{{ doc("gtfs_trips__block_id") }}'
      - name: route_key
        description: Foreign key to dim_routes.
        tests:
          - relationships:
              to: ref('dim_routes')
              field: key
      - name: route_id
        description: '{{ doc("gtfs_routes__route_id") }}'
      - name: route_type
        description: '{{ doc("gtfs_routes__route_type") }}'
      - name: route_short_name
        description: '{{ doc("gtfs_routes__route_short_name") }}'
      - name: route_long_name
        description: '{{ doc("gtfs_routes__route_long_name") }}'
      - name: route_desc
        description: '{{ doc("gtfs_routes__route_desc") }}'
      - name: agency_id
        description: '{{ doc("gtfs_routes__agency_id") }}'
      - name: network_id
        description: '{{ doc("gtfs_routes__network_id") }}'
      - name: shape_array_key
        description: Foreign key to dim_shapes_arrays.
        tests:
          - relationships:
              to: ref('dim_shapes_arrays')
              field: key
      - name: gtfs_dataset_key
        description: |
          Foreign key to the associated GTFS dataset record.
          Because GTFS data was downloaded in the v1 pipeline before
          `gtfs dataset` records were being archived in the warehouse,
          it is possible for GTFS data to be associated with a GTFS dataset
          record that was not yet in effect at the time the data was downloaded.
          (So, you may see GTFS data from January 2022 associated with a GTFS dataset
          record that does not take effect until July 2022.)
          This is done for convenience to facilitate labeling of older data (the alternative
          would be failing to join and making it essentially impossible to label
          historical GTFS data with their associated transit database records).
      - name: shape_id
        description: '{{ doc("gtfs_trips__shape_id") }}'
      - name: contains_warning_duplicate_trip_primary_key
        description: |
          Rows with `true` in this column have a duplicate primary key in dim_trips;
          i.e., `trip_id` is duplicated within an individual feed instance.
          Treat these rows with caution.
      - name: n_stops
        description: |
          A distinct count of stop_id by trip
          Because this represents distinct stop_id values, it is not appropriate to sum across different trips.
      - name: n_stop_times
        description: |
          A count of stop events by trip
      - name: trip_first_departure_sec
        description: |
          The number of seconds after midnight on `service_day` in `feed_timezone` at
          which this trip's first stop departure occurred.

          This field is used upstream of this table to make generic service determinations
          in tables where we don't have a specific date assigned yet (for example, within
          stop_times.) Downstream of this table, now that specific dates are associated
          with the trips, this field should not be used.
      - name: trip_last_arrival_sec
        description: |
          The number of seconds after midnight on `service_day` in `feed_timezone` at
          which this trip's last stop arrival occurred.

          This field is used upstream of this table to make generic service determinations
          in tables where we don't have a specific date assigned yet (for example, within
          stop_times.) Downstream of this table, now that specific dates are associated
          with the trips, this field should not be used.
      - name: service_hours
        description: |
          A trip's total hours of service, calculated by subtracting `trip_last_arrival_sec` from
          `trip_first_departure_sec` and converting to hours.
      - name: contains_warning_duplicate_stop_times_primary_key
        description: |
          Rows with `true` in this column indicate that the columns in this table that are aggregated from
          stop times data (`n_stops`, `n_stop_times`,  `trip_first_departure_sec`, `trip_last_arrival_sec`,
          and `service_hours`) contain at least one row that had a duplicate primary key in the source stop times data.

          I.e., at least one row being aggregated had a `trip_id` / `stop_sequence` pair that was not unique
          in the input data. This indicates that data quality issues were present in the stop times data
          that is being summarized here, and counts may be inflated due to multiple rows with identical identifiers.
      - name: contains_warning_missing_foreign_key_stop_id
        description: |
          Rows with `true` in this column indicate that the columns in this table that are aggregated from
          stop times data (`n_stops`, `n_stop_times`,  `trip_first_departure_sec`, `trip_last_arrival_sec`,
          and `service_hours`) contain at least one row that had a missing `stop_id` foreign key in the source stops data.

          I.e., at least one row being aggregated had a `stop_id` foreign key that was missing
          in the input data. This indicates that data quality issues were present in the stop times data
          that is being summarized here, and the count of distinct `stop_id`s at the trip level may be incorrect.
      - name: trip_start_timezone
        description: |
          The time zone of the first stop in this trip.
      - name: trip_end_timezone
        description: |
          The time zone of the final stop in this trip.
      - name: trip_first_departure_ts
        description: |
          The timestamp (non-localized, absolute) at which this trip's first departure occurred.

          This field should be used to:
          * Identify all activity that was happening at a specific instant in time
          * Calculate durations or identify relative ordering of events

          This field should not be used to:
          * Bucket events by time of day (because this does not reflect the time zone in which the trip activity actually occurred)
          * Filter activity by date (because this does not necessarily reflect the local date on which the trip activity actually occurred)
      - name: trip_last_arrival_ts
        description: |
          The timestamp (non-localized, absolute) at which this trip's last stop arrival occurred.

          This field should be used to:
          * Identify all activity that was happening at a specific instant in time
          * Calculate durations or identify relative ordering of events

          This field should not be used to:
          * Bucket events by time of day (because this does not reflect the time zone in which the trip activity actually occurred)
          * Filter activity by date (because this does not necessarily reflect the local date on which the trip activity actually occurred)
      - name: trip_start_date_pacific
        description: |
          The "America/Los_Angeles" time zone date on which this trip began.
          There are some feeds with activity that does not occur within this time zone,
          but we assume that for analysis purposes it is preferable to standardize to California's time zone.

          This field should be used to:
          * Filter trip activity by date

          This field should not be used to:
          * Calculate durations or identify relative ordering of events
          * Identify the service date that the agency assigns to this trip
          * Join with internal-to-GTFS data that is keyed by service date

      - name: trip_first_departure_datetime_pacific
        description: |
          The "America/Los_Angeles" time zone date and time of this trip's first departure.
          There are some feeds with activity that does not occur within this time zone,
          but we assume that for analysis purposes it is preferable to standardize to California's time zone.

          This field should be used to:
          * Filter trip activity by date and time
          * Bucket trips by time of day

          This field should not be used to:
          * Calculate durations or identify relative ordering of events
          * Identify the service date that the agency assigns to this trip
          * Join with internal-to-GTFS data that is keyed by service date

      - name: trip_last_arrival_datetime_pacific
        description: |
          The "America/Los_Angeles" time zone date and time of this trip's last arrival.
          See trip_first_departure_datetime_pacific for usage notes.
      - name: trip_start_date_local_tz
        description: |
          The local (`trip_start_timezone`) date on which this trip began.
          If you are specifically concerned with activity outside of California,
          it may be preferable to use this rather than trip_start_date_pacific.
      - name: trip_first_departure_datetime_local_tz
        description: |
          The local (`trip_start_timezone`) datetime of this trip's first departure.
          If you are specifically concerned with activity outside of California,
          it may be preferable to use this rather than trip_first_departure_datetime_pacific.

      - name: trip_last_arrival_datetime_local_tz
        description: |
          The local (`trip_end_timezone`) datetime of this trip's last arrival.
          If you are specifically concerned with activity outside of California,
          it may be preferable to use this rather than trip_last_arrival_datetime_pacific.
      - *feed_timezone_no_tests
      - name: frequencies_defined_trip
        description: |
          Rows with `true` are trips defined in `frequencies.txt`, where they are defined as a
          repeating trip. This means the underlying data structure is different for these trips;
          see https://gtfs.org/schedule/reference/#frequenciestxt for more information.
      - name: iteration_num
        description: |
          For frequencies-defined trips, the iteration number (starting from 0) for this trip within its
          defined window. So the first iteration of the trip will have `iteration_num = 0`, and the next
          trip will have `iteration_num = 1`, and so on.
        tests:
          - not_null:
              config:
                where: "frequencies_defined_trip"

  - name: fct_daily_rt_feed_files
    description: |
      Each row is a date / URL pair with a summary of data aggregation outcomes.
    columns:
    - name: key
      tests: *primary_key_tests
    - name: date
      description: Date that data was downloaded.
    - <<: *base64_url
      tests:
        - not_null
    - &feed_type
      name: feed_type
      description: |
        One of `service_alerts`, `vehicle_positions`, and `trip_updates`.
    - name: parse_success_file_count
      description: Count of files successfully parsed. Target is 4,320 (one file every 20 seconds.)
      tests:
        - not_null
    - name: parse_failure_file_count
      description: Count of files where parsing failed, but a file was present.
      tests:
        - not_null
    - &gtfs_dataset_key
      name: gtfs_dataset_key
      description: |
        Foreign key to the associated GTFS dataset record.
        Because GTFS data was downloaded in the v1 pipeline before
        `gtfs dataset` records were being archived in the warehouse,
        it is possible for GTFS data to be associated with a GTFS dataset
        record that was not yet in effect at the time the data was downloaded.
        (So, you may see GTFS data from January 2022 associated with a GTFS dataset
        record that does not take effect until July 2022.)
        This is done for convenience to facilitate labeling of older data (the alternative
        would be failing to join and making it essentially impossible to label
        historical GTFS data with their associated transit database records).
      tests:
        - dbt_utils.not_null_proportion:
            # TODO: raise back to .999 after some time getting new data - was .998 because
            # old data pipeline produced more nulls
            at_least: 0.998
        - relationships:
            to: ref('dim_gtfs_datasets')
            field: key
            config:
              # there are a dozen rows of SMART transit which was deleted from Airtable
              # this will work without exception once the Airtable dim is historical;
              # this threshold may need to increase if the backfill occurs prior to that
              error_if: ">20"
    - name: schedule_to_use_for_rt_validation_gtfs_dataset_key
      description: |
        Foreign key for the GTFS dataset record of the GTFS schedule dataset that
        should be used to validate this realtime dataset.
      tests:
          - relationships:
              to: ref('dim_gtfs_datasets')
              field: key
    - name: schedule_feed_key
      description: |
        Foreign key for the GTFS schedule feed version for this date / RT feed pair.
      tests:
          - relationships:
              to: ref('dim_schedule_feeds')
              field: key

  - name: fct_daily_feed_scheduled_service_summary
    description: |
      Daily service totals by feed. Each row is a date / feed pair where that feed
      was online on that date (corresponds to `fct_daily_schedule_feeds`).
      This means there are feeds present with 0 `ttl_service_hours`.
      Service summary is based on `fct_daily_scheduled_trips`, grouped to the feed level
      (a feed with no trips in `fct_daily_scheduled_trips` will have 0s here for the summary columns.)
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - service_date
            - feed_key
      - dbt_utils.expression_is_true:
          expression: "ttl_service_hours >= 0"
    columns:
      - &service_date_for_summaries
        name: service_date
        description: |
          Agency-defined service date on which this service level was present.
          This respects the agency's definition of a service day, which may not correspond to
          a calendar date or even a 24-hour period.
          See https://gtfs.org/schedule/reference/#field-types for the GTFS
          Schedule definition of a "date" data type or `fct_daily_scheduled_trips` for
          more dates that can be associated with trip activity.

          This date is used so that this table's service summaries correspond to the
          service levels that an agency might describe on a given (service) date, even
          if that does not correspond to the actual calendar date on which the
          given trip activity occurred.
        tests:
          - not_null
      - *feed_key
      - name: ttl_service_hours
        description: Total service hours across entire feed on date; can be 0 if no service
      - name: n_trips
        description: Total number of trips ran on date; can be 0 if no scheduled trips
      - name: first_departure_sec
        description: Time of first departure on date; null when no trips scheduled
      - name: last_arrival_sec
        description: Time of last departure on date; null when no trips scheduled
      - name: n_stop_times
        description: |
          Total number of stop events observed; can be 0 if not scheduled trips
      - name: n_routes
        description: |
          Total number of routes that had trips scheduled on this day; can be 0 if no scheduled trips
      - name: contains_warning_duplicate_stop_times_primary_key
        description: |
          Rows with `true` in this column indicate that the columns in this table that are aggregated from
          stop times data (`n_stops`, `n_stop_times`,  `trip_first_departure_sec`, `trip_last_arrival_sec`,
          and `service_hours`) contain at least one row that had a duplicate primary key in the source stop times data.

          I.e., at least one row being aggregated had a `trip_id` / `stop_sequence` pair that was not unique
          in the input data. This indicates that data quality issues were present in the stop times data
          that is being summarized here, and counts may be inflated due to multiple rows with identical identifiers.
      - name: contains_warning_duplicate_trip_primary_key
        description: |
          Rows with `true` in this column indicate that `dim_trips` contains duplicates of this trip primary key.

          i.e., `trip_id` is duplicated within an individual feed instance.
      - name: contains_warning_missing_foreign_key_stop_id
        description: |
          Rows with `true` in this column indicate that the columns in this table that are aggregated from
          stop times data (`n_stops`, `n_stop_times`,  `trip_first_departure_sec`, `trip_last_arrival_sec`,
          and `service_hours`) contain at least one row that had a missing `stop_id` foreign key in the source stops data.

          I.e., at least one row being aggregated had a `stop_id` foreign key that was missing
          in the input data. This indicates that data quality issues were present in the stop times data
          that is being summarized here.
  - name: fct_hourly_rt_feed_files
    description: |
      An hourly count of the files that were downloaded each day per feed.
    columns:
      - name: key
        description: |
          Synthetic primary key constructed from `dt` and `base64_url`.
        tests: *primary_key_tests
      - name: dt
        description: |
          Date on which the download attempt was made.
      - *base64_url
      - *feed_type
      - name: file_count_day
        description: |
          The total number of files downloaded on on this day for this URL
      - name: hr_0
        description: |
          Count of files downloaded for this URL in the 0 hour UTC
      - name: hr_1
      - name: hr_2
      - name: hr_3
      - name: hr_4
      - name: hr_5
      - name: hr_6
      - name: hr_7
      - name: hr_8
      - name: hr_9
      - name: hr_10
      - name: hr_11
      - name: hr_12
      - name: hr_13
      - name: hr_14
      - name: hr_15
      - name: hr_16
      - name: hr_17
      - name: hr_18
      - name: hr_19
      - name: hr_20
      - name: hr_21
      - name: hr_22
      - name: hr_23
      - name: gtfs_dataset_key
        description: |
          The primary key for the record in `dim_gtfs_datasets` associated with this feed.
  - name: fct_hourly_rt_feed_files_success
    description: |
      The proportion of downloaded files that were successfully parsed as GTFS-RT.
    columns:
      - name: key
        description: |
          Synthetic primary key constructed from `dt` and `base64_url`.
        tests: *primary_key_tests
      - name: dt
        description: |
          Date on which the download attempt was made.
      - *base64_url
      - *feed_type
      - name: prop_success_file_count_day
        description: |
          The proportion of files successfully downloaded on this day for this URL
      - name: hr_0
        description: |
          The proportion of files successfully downloaded for this URL in the 0 hour UTC
      - name: hr_1
      - name: hr_2
      - name: hr_3
      - name: hr_4
      - name: hr_5
      - name: hr_6
      - name: hr_7
      - name: hr_8
      - name: hr_9
      - name: hr_10
      - name: hr_11
      - name: hr_12
      - name: hr_13
      - name: hr_14
      - name: hr_15
      - name: hr_16
      - name: hr_17
      - name: hr_18
      - name: hr_19
      - name: hr_20
      - name: hr_21
      - name: hr_22
      - name: hr_23
      - name: gtfs_dataset_key
        description: |
          The primary key for the record in `dim_gtfs_datasets` associated with this feed.
  - name: fct_service_alerts_messages
    description: |
      Each row is a message received from a service alerts GTFS RT feed.
      See https://gtfs.org/realtime/reference/#message-alert for information
      about message structure.
      Due to data size, this table **must** be queried with a date filter (like `WHERE dt = 'YYYY-MM-DD'`).
      Hour filters will also further improve performance.
    columns:
      - name: key
        description: |
          Synthetic primary key constructed from `base64_url`, `extract_ts`,
          entity `id`.
        tests: &rt_primary_key_tests
          - unique:
              where: '__rt_sampled__'
          - not_null:
              where: '__rt_sampled__'
      - name: gtfs_dataset_key
        description: |
          The primary key for the record in `dim_gtfs_datasets` associated with this message.
        columns:
          - <<: *gtfs_dataset_key
            config:
              where: '__rt_sampled__'
      - name: dt
        description: |
          Date on which we scraped this message.
          A date filter *must* be provided when querying this table, because of the size of the data.
      - name: hour
        description: |
          Timestamp of the beginning of the hour in which this message was scraped,
          ex. "2022-09-01T00:00:00+00".
      - name: base64_url
        description: |
          URL-safe base64 encoding of the URL from which this message was scraped.
      - name: _extract_ts
        description: |
          Time at which this message was scraped.
      - name: _gtfs_dataset_name
        description: |
          String name of the GTFS dataset of which this message is a part.
          This field is provided for human readability and should not be used as a join key.
      - name: header_timestamp
        description: |
          See: https://gtfs.org/realtime/reference/#message-feedheader.
          Field has been converted to TIMESTAMP type for convenience.
      - name: header_incrementality
        description: |
          See: https://gtfs.org/realtime/reference/#message-feedheader.
      - name: header_version
        description: |
          See: https://gtfs.org/realtime/reference/#message-feedheader.
      - name: id
        description: |
          See: https://gtfs.org/realtime/reference/#message-feedentity.
      - name: active_period
        description: |
          See: https://gtfs.org/realtime/reference/#message-alert.
      - name: informed_entity
        description: |
          See: https://gtfs.org/realtime/reference/#message-alert.
      - name: cause
        description: |
          See: https://gtfs.org/realtime/reference/#message-alert.
      - name: effect
        description: |
          See: https://gtfs.org/realtime/reference/#message-alert.
      - name: url
        description: |
          See: https://gtfs.org/realtime/reference/#message-alert.
      - name: header_text
        description: |
          See: https://gtfs.org/realtime/reference/#message-alert.
      - name: description_text
        description: |
          See: https://gtfs.org/realtime/reference/#message-alert.
      - name: tts_header_text
        description: |
          See: https://gtfs.org/realtime/reference/#message-alert.
      - name: tts_description_text
        description: |
          See: https://gtfs.org/realtime/reference/#message-alert.
      - name: severity_level
        description: |
          See: https://gtfs.org/realtime/reference/#message-alert.
      - *_header_message_age
  - name: fct_service_alerts_messages_unnested
    description: |
      This table contains GTFS RT service alerts messages with all elements (informed entities,
      active periods, and translations) unnested, so each row is a message / entity / active period /
      translation combination. It has been filtered so that only one translation (the one with highest likelihood
      of being in English) appears per message.
      Therefore one row here should correspond to one actual "alert" (counting alerts
      that apply to different entities or different time periods as distinct.)
      See: https://gtfs.org/realtime/reference/#message-alert for field definitions.
    tests:
      - dbt_utils.expression_is_true:
          expression: "active_period_start <= active_period_end"
          where: '__rt_sampled__'
    columns:
      - name: key
        description: |
          Synthetic primary key constructed from `service_alerts_message_key` along with the active period
          and informed entities.
        tests: *rt_primary_key_tests
      - name: service_alert_message_key
        description: |
          The primary key for the message in `fct_service_alerts_messages`.
        tests:
          - not_null:
              config:
                where: '__rt_sampled__'
          # this doesn't work because we would need to do partition elimination on fct_service_alerts_messages
          # TODO: create a custom relationships_where to handle the partition elimination
          # - relationships:
          #     to: ref('fct_service_alerts_messages')
          #     field: key
          #     config:
          #       where: '__rt_sampled__'
      - name: gtfs_dataset_key
        description: |
          The primary key for the record in `dim_gtfs_datasets` associated with this message.
        columns:
          - <<: *gtfs_dataset_key
            config:
              where: '__rt_sampled__'
      - name: dt
        description: |
          Date on which we scraped this message.
          A date filter *must* be provided when querying this table, because of the size of the data.
      - name: hour
        description: |
          Timestamp of the beginning of the hour in which this message was scraped,
          ex. "2022-09-01T00:00:00+00".
      - name: base64_url
        description: |
          URL-safe base64 encoding of the URL from which this message was scraped.
      - name: _extract_ts
        description: |
          Time at which this message was scraped.
      - name: _gtfs_dataset_name
        description: |
          String name of the GTFS dataset of which this message is a part.
          This field is provided for human readability and should not be used as a join key.
      - name: url_text
        description: |
          See: https://gtfs.org/realtime/reference/#message-translation.
      - name: url_language
        description: |
          See: https://gtfs.org/realtime/reference/#message-translation.
      - name: header_text_text
        description: |
          See: https://gtfs.org/realtime/reference/#message-translation.
      - name: header_text_language
        description: |
          See: https://gtfs.org/realtime/reference/#message-translation.
      - name: description_text_text
        description: |
          See: https://gtfs.org/realtime/reference/#message-translation.
      - name: description_text_language
        description: |
          See: https://gtfs.org/realtime/reference/#message-translation.
      - name: tts_header_text_text
        description: |
          See: https://gtfs.org/realtime/reference/#message-translation.
      - name: tts_header_text_language
        description: |
          See: https://gtfs.org/realtime/reference/#message-translation.
      - name: tts_description_text_text
        description: |
          See: https://gtfs.org/realtime/reference/#message-translation.
      - name: tts_description_text_language
        description: |
          See: https://gtfs.org/realtime/reference/#message-translation.
      - name: agency_id
        description: |
          See: https://gtfs.org/realtime/reference/#message-entityselector.
      - name: route_id
        description: |
          See: https://gtfs.org/realtime/reference/#message-entityselector.
      - name: route_type
        description: |
          See: https://gtfs.org/realtime/reference/#message-entityselector.
      - name: direction_id
        description: |
          See: https://gtfs.org/realtime/reference/#message-entityselector.
      - name: trip_id
        description: |
          See: https://gtfs.org/realtime/reference/#message-entityselector.
      - name: route_id
        description: |
          See: https://gtfs.org/realtime/reference/#message-tripdescriptor.
      - name: trip_direction_id
        description: |
          See: https://gtfs.org/realtime/reference/#message-tripdescriptor.
      - name: trip_start_time
        description: |
          See: https://gtfs.org/realtime/reference/#message-tripdescriptor.
      - name: trip_start_date
        description: |
          See: https://gtfs.org/realtime/reference/#message-tripdescriptor.
      - name: trip_schedule_relationship
        description: |
          See: https://gtfs.org/realtime/reference/#message-tripdescriptor.
      - name: stop_id
        description: |
          See: https://gtfs.org/realtime/reference/#message-entityselector.
      - name: active_period_start
        description: |
          See: https://gtfs.org/realtime/reference/#message-timerange.
      - name: active_period_end
        description: |
          See: https://gtfs.org/realtime/reference/#message-timerange.
      - name: active_period_start_ts
        description: |
          `active_period_start` converted to a TIMESTAMP data type.
          If `active_period_start` is null, will be midnight on January 1, 1900.
      - name: active_period_end_ts
        description: |
          `active_period_end` converted to a TIMESTAMP data type.
          If `active_period_end` is null, will be midnight on January 1, 2099.
      - *_header_message_age
  - name: fct_daily_service_alerts
    description: |
      Each row is a daily summary of a service alert.
      See https://gtfs.org/realtime/reference/#message-alert for information
      about message structure.
    columns:
      - name: key
        description: |
          Synthetic primary key constructed from `dt`,
          `base64_url`, and entity `id`.
        tests:
          - unique_proportion:
              at_least: 0.98
              where: '__rt_sampled__'
          - not_null:
              where: '__rt_sampled__'
      - name: first_header_timestamp
        description: |
          Earliest header timestamp at which this alert appeared on this date.
      - name: last_header_timestamp
        description: |
          Latest header timestamp at which this alert appeared on this date.
      - name: num_appearances
        description: |
          Number of times that this alert appeared on this date.
  - name: fct_daily_scheduled_shapes
    description: |
      Each row is a summary of trip activity by shape for a given feed on a given agency-defined `service_date`.
      For the relationship between a shape, a trip, and its stops, see: https://gtfs.org/schedule/reference/#shapestxt.
    columns:
      - name: key
        description: |
          Synthetic primary key constructed from `activity_date`, `shape_id`, and `shape_array_key`.
        tests:
          - unique:
              where: "not contains_warning_duplicate_trip_primary_key"
          - not_null
      - name: n_trips
        description: The number of trips associated with this shape on the given date.
      - *feed_key
      - *feed_timezone_no_tests
      - *service_date_for_summaries
      - name: shape_id
        description: '{{ doc("gtfs_trips__shape_id") }}'
      - name: shape_array_key
        description: Foreign key to dim_shapes_arrays.
      - name: pt_array
        description: Ordered array of WKT points that describe this shape.
      - name: shape_first_departure_datetime_pacific
        description: |
          The datetime, in the "America/Los_Angeles" time zone, of the first stop departure for a trip on this shape on this `service_date`.
          This field can help contextualize the actual trip activity times that are grouped under this `service_date`.
          The date portion of this datetime may not correspond to the `service_date` and the gap
          between `shape_first_departure_datetime_pacific` and `shape_last_arrival_datetime_pacific`
          could potentially be greater than 24 hours; see `service_date` for more documentation on how
          `service_date` is defined and why it does not necessarily correspond to a calendar date or 24 hour period.
      - name: shape_last_arrival_datetime_pacific
        description: |
          The datetime, in the "America/Los_Angeles" time zone, of the last stop arrival for a trip on this shape on this `service_date`.
          This field can help contextualize the actual trip activity times that are grouped under this `service_date`.
          The date portion of this datetime may not correspond to the `service_date` and the gap
          between `shape_first_departure_datetime_pacific` and `shape_last_arrival_datetime_pacific`
          could potentially be greater than 24 hours; see `service_date` for more documentation on how
          `service_date` is defined and why it does not necessarily correspond to a calendar date or 24 hour period.
      - name: contains_warning_duplicate_trip_primary_key
        description: |
          Rows with `true` in this column indicate that the columns in this table that are aggregated from
          trips data (`stop_event_count`, `route_type_0_count`, `route_type_1_count`, `route_type_2_count`, `route_type_3_count`,
          `route_type_4_count`, `route_type_5_count`, `route_type_6_count`, `route_type_7_count`, `route_type_11_count`,
          `route_type_12_count`) contain at least one row that had a duplicate primary key in the source trips data.

          I.e., at least one row being aggregated had a `feed_key` / `trip_id` pair that was not unique
          in the input data. This indicates that data quality issues were present in the trips data
          that is being summarized here, and counts may be inflated due to multiple rows with identical identifiers.
  - name: fct_daily_scheduled_stops
    description: |
      Each row is a summary of trip activity by stop for a given feed on a given agency-defined `service_date`.

      A stop here is defined within an individual feed so each real-world stop will have one row
      per feed in which it appears. This means an individual real-world stop location may appear in this table multiple times
      if it is served by multiple agencies or served by an agency with multiple feeds.
    columns:
      - name: key
        description: |
          Synthetic primary key constructed from `stop_arrival_date_pacific` and `stop_key`.
        tests:
          - unique:
              where: "not contains_warning_duplicate_trip_primary_key AND not contains_warning_duplicate_stop_times_primary_key AND not contains_warning_duplicate_stop_primary_key"
          - not_null
      - *service_date_for_summaries
      - *feed_key
      - *feed_timezone_no_tests
      - name: stop_id
        description: '{{ doc("gtfs_stops__stop_id") }}'
      - name: stop_event_count
        description: The number of stop events associated with this stop on the given date.
      - name: route_type_0
        description: |
          The count of stop events associated with route_type 0 - Tram, Streetcar, Light rail
      - name: route_type_1
        description: |
          The count of stop events associated with route_type 1 - Subway, Metro
      - name: route_type_2
        description: |
          The count of stop events associated with route_type 2 - Rail
      - name: route_type_3
        description: |
          The count of stop events associated with route_type 3 - Bus
      - name: route_type_4
        description: |
          The count of stop events associated with route_type 4 - Ferry
      - name: route_type_5
        description: |
          The count of stop events associated with route_type 5 - Cable Tram
      - name: route_type_6
        description: |
          The count of stop events associated with route_type 6 - Aerial lift, suspended cable car (e.g., gondola lift, aerial tramway)
      - name: route_type_7
        description: |
          The count of stop events associated with route_type 7 - Cable Tram
      - name: route_type_11
        description: |
          The count of stop events associated with route_type 11 - Trolleybus
      - name: route_type_12
        description: |
          The count of stop events associated with route_type 12 - Monorail
      - name: missing_route_type
        description: |
          The count of stop events associated with a `stop_id` that had a null `route_type` value in `dim_routes`
      - name: first_stop_arrival_datetime_pacific
        description: |
          The datetime, in the "America/Los_Angeles" time zone, of the first arrival at this stop on this `service_date`.
          This field can help contextualize the actual trip activity times that are grouped under this `service_date`.
          The date portion of this datetime may not correspond to the `service_date` and the gap
          between `first_stop_arrival_datetime_pacific` and `last_stop_departure_datetime_pacific`
          could potentially be greater than 24 hours; see `service_date` for more documentation on how
          `service_date` is defined and why it does not necessarily correspond to a calendar date or 24 hour period.
      - name: last_stop_departure_datetime_pacific
        description: |
          The datetime, in the "America/Los_Angeles" time zone, of the last departure from this stop on this `service_date`.
          This field can help contextualize the actual trip activity times that are grouped under this `service_date`.
          The date portion of this datetime may not correspond to the `service_date` and the gap
          between `first_stop_arrival_datetime_pacific` and `last_stop_departure_datetime_pacific`
          could potentially be greater than 24 hours; see `service_date` for more documentation on how
          `service_date` is defined and why it does not necessarily correspond to a calendar date or 24 hour period.
      - name: contains_warning_duplicate_stop_times_primary_key
        description: |
          Rows with `true` in this column indicate that the columns in this table that are aggregated from
          stop times data (`stop_event_count`, `route_type_0_count`, `route_type_1_count`, `route_type_2_count`, `route_type_3_count`,
          `route_type_4_count`, `route_type_5_count`, `route_type_6_count`, `route_type_7_count`, `route_type_11_count`,
          `route_type_12_count`) contain at least one row that had a duplicate primary key in the source stop times data.

          I.e., at least one row being aggregated had a `trip_id` / `stop_sequence` pair that was not unique
          in the input data. This indicates that data quality issues were present in the stop times data
          that is being summarized here, and counts may be inflated due to multiple rows with identical identifiers.
      - name: contains_warning_duplicate_trip_primary_key
        description: |
          Rows with `true` in this column indicate that the columns in this table that are aggregated from
          trips data (`stop_event_count`, `route_type_0_count`, `route_type_1_count`, `route_type_2_count`, `route_type_3_count`,
          `route_type_4_count`, `route_type_5_count`, `route_type_6_count`, `route_type_7_count`, `route_type_11_count`,
          `route_type_12_count`) contain at least one row that had a duplicate primary key in the source trips data.

          I.e., at least one row being aggregated had a `feed_key` / `trip_id` pair that was not unique
          in the input data. This indicates that data quality issues were present in the trips data
          that is being summarized here, and counts may be inflated due to multiple rows with identical identifiers.
      - name: contains_warning_duplicate_stop_primary_key
        description: |
          Rows with `true` in this column have a duplicate primary key in dim_stops;
          i.e., `stop_id` is duplicated within an individual feed instance.
          Treat these rows with caution.
      - name: stop_key
        description: Foreign key to the `dim_stops` table.
        tests:
          - relationships:
              to: ref('dim_stops')
              field: key
      - name: tts_stop_name
        description: '{{ doc("gtfs_stops__tts_stop_name") }}'
      - name: pt_geom
        description: GEOGPOINT created by the stop latitute and longitude
      - name: parent_station
        description: '{{ doc("gtfs_stops__parent_station") }}'
      - name: stop_code
        description: '{{ doc("gtfs_stops__stop_code") }}'
      - name: stop_name
        description: '{{ doc("gtfs_stops__stop_name") }}'
      - name: stop_desc
        description: '{{ doc("gtfs_stops__stop_desc") }}'
      - name: location_type
        description: '{{ doc("gtfs_stops__location_type") }}'
      - name: stop_timezone_coalesced
        description: '{{ doc("gtfs_schedule_stop_timezone_coalesced") }}'
      - name: wheelchair_boarding
        description: '{{ doc("gtfs_stops__wheelchair_boarding") }}'

  - name: fct_observed_trips
    description: |
      Joined model of observed trips across RT feeds related to the same
      Schedule feed. For each day, per Schedule, there will be one row
      per "trip_identifier" which is a hash of the fields that make up
      a GTFS RT TripDescriptor. See https://gtfs.org/realtime/reference/#message-tripdescriptor
      for more details.
    tests:
      - dbt_utils.expression_is_true:
          expression: "COALESCE(tu_gtfs_dataset_key, vp_gtfs_dataset_key, sa_gtfs_dataset_key) IS NOT NULL"
    columns:
      # keys and identifiers
      - name: key
        tests: *primary_key_tests
      - name: dt
      - name: schedule_to_use_for_rt_validation_gtfs_dataset_key
        description: Schedule feed used to group RT feeds likely representing the same underlying schedule.
      - name: trip_identifier
        description: Hashed representation of a TripDescriptor.
      - name: trip_id
        description: Part of a TripDescriptor.
      - name: trip_route_id
        description: Part of a TripDescriptor.
      - name: trip_direction_id
        description: Part of a TripDescriptor.
      - name: trip_start_time
        description: Part of a TripDescriptor.
      - name: trip_start_date
        description: Part of a TripDescriptor.
      # foreign keys
      - name: tu_gtfs_dataset_key
        tests:
          - dbt_utils.relationships_where:
              to: ref('dim_gtfs_datasets')
              field: key
              to_condition: "type = 'trip_updates'"
      - name: tu_base64_url
      - name: vp_gtfs_dataset_key
        tests:
          - dbt_utils.relationships_where:
              to: ref('dim_gtfs_datasets')
              field: key
              to_condition: "type = 'vehicle_positions'"
      - name: vp_base64_url
      - name: sa_gtfs_dataset_key
        tests:
          - dbt_utils.relationships_where:
              to: ref('dim_gtfs_datasets')
              field: key
              to_condition: "type = 'service_alerts'"
      - name: sa_base64_url
      # trip update facts
      - name: tu_num_distinct_message_ids
        description: Count of distinct trip update message IDs referencing this trip.
      - name: tu_min_extract_ts
        description: Timestamp of first trip update extract referencing this trip.
      - name: tu_max_extract_ts
        description: Timestamp of last trip update extract referencing this trip.
      - name: tu_min_header_timestamp
        description: Timestamp of first trip update header referencing this trip.
      - name: tu_max_header_timestamp
        description: Timestamp of last trip update header referencing this trip.
      - name: tu_min_trip_update_timestamp
        description: Timestamp of first trip update referencing this trip.
      - name: tu_max_trip_update_timestamp
        description: Timestamp of last trip update referencing this trip.
      - name: tu_max_delay
        description: Maximum observed delay for this trip.
      - name: tu_num_skipped_stops
        description: Number of skipped stops for this trip.
      # vehicle position facts
      - name: vp_num_distinct_message_ids
        description: Count of distinct vehicle position message IDs referencing this trip.
      - name: vp_min_extract_ts
        description: Timestamp of first vehicle position extract referencing this trip.
      - name: vp_max_extract_ts
        description: Timestamp of last vehicle position extract referencing this trip.
      - name: vp_min_header_timestamp
        description: Timestamp of first vehicle position header referencing this trip.
      - name: vp_max_header_timestamp
        description: Timestamp of last vehicle position header referencing this trip.
      - name: vp_min_vehicle_timestamp
        description: Timestamp of first vehicle position referencing this trip.
      - name: vp_max_vehicle_timestamp
        description: Timestamp of last vehicle position referencing this trip.
      - name: vp_first_position_latitude
        description: Latitude of first vehicle position referencing this trip.
      - name: vp_first_position_longitude
        description: Longitude of first vehicle position referencing this trip.
      - name: vp_last_position_latitude
        description: Latitude of last vehicle position referencing this trip.
      - name: vp_last_position_longitude
        description: Longitude of last vehicle position referencing this trip.
      # service alert facts
      - name: sa_num_distinct_message_ids
        description: Count of distinct service alert message IDs referencing this trip.
      - name: sa_service_alert_message_keys
        description: Array of keys of service alert messages referencing this trip.
      - name: sa_min_extract_ts
        description: Timestamp of first service alert extract referencing this trip.
      - name: sa_max_extract_ts
        description: Timestamp of last service alert extract referencing this trip.
      - name: sa_min_header_timestamp
        description: Timestamp of first service alert header referencing this trip.
      - name: sa_max_header_timestamp
        description: Timestamp of last service alert header referencing this trip.

  - name: fct_trip_updates_no_stop_times
    description: |
      Incrementally materialize trip update messages without stop times; this reduces the data size by about 90%.
    columns:
      - name: key
        tests: *almost_unique_rt_key_tests

  - name: fct_service_alerts_trip_summaries
    description: |
      Summarizes trips observed in service alert messages.
    columns:
      - &rt_trip_summary_key
        name: key
        description: Date, URL, and trip descriptor (https://gtfs.org/realtime/reference/#message-tripdescriptor).
        tests:
          - not_null:
              config:
                where: dt >= DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY)
          - unique:
              config:
                where: dt >= DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY)
      - &num_distinct_message_ids
        name: num_distinct_message_ids
        description: Distinct count of top-level ids (https://gtfs.org/realtime/reference/#message-feedentity).
      - &num_distinct_header_timestamps
        name: num_distinct_header_timestamps
        description: Distinct count of header timestamps from the feed (https://gtfs.org/realtime/reference/#message-feedheader).
      - &min_extract_ts
        name: min_extract_ts
        description: |
          Timestamp of the first extract (i.e. the time at which
          we downloaded this feed extract) on this day referencing this trip.
          For RT, our extracts are pinned to 20 second intervals, i.e. :00, :20, :40.
      - &max_extract_ts
        name: max_extract_ts
        description: |
          Timestamp of the last extract (i.e. the time at which
          we downloaded this feed extract) on this day referencing this trip.
          For RT, our extracts are pinned to 20 second intervals, i.e. :00, :20, :40.
      - &min_header_timestamp
        name: min_header_timestamp
        description: Earliest header timestamp of a message referencing this trip.
      - &max_header_timestamp
        name: max_header_timestamp
        description: Latest header timestamp of a message referencing this trip.
      - name: service_alert_message_keys
        description: Keys of the service alert messages that referenced this trip.

  - name: fct_trip_updates_summaries
    description: |
      Summarizes trips observed in trip update messages.
    columns:
      - *rt_trip_summary_key
      - *num_distinct_message_ids
      - *num_distinct_header_timestamps
      - name: num_distinct_trip_update_timestamps
        description: Distinct count of trip update timestamps from the feed (https://gtfs.org/realtime/reference/#message-tripupdate).
      - *min_extract_ts
      - *max_extract_ts
      - *min_header_timestamp
      - *max_header_timestamp
      - name: min_trip_update_timestamp
        description: Earliest trip update timestamp of a message referencing this trip.
      - name: max_trip_update_timestamp
        description: Latest trip update timestamp of a message referencing this trip.
      - name: max_delay
        description: Maximium observed delay for this trip during this day.
      - name: num_skipped_stops
        description: Distinct count of stop_ids in messages where schedule_relationship was SKIPPED.
      - name: num_scheduled_canceled_added_stops
        description: Distinct count of stop_ids in messages where schedule_relationship was SCHEDULED, CANCELED, or ADDED.

  - name: fct_vehicle_positions_trip_summaries
    description: |
      Summarizes trips observed in vehicle position messages.
    columns:
      - *rt_trip_summary_key
      - *num_distinct_message_ids
      - *num_distinct_header_timestamps
      - name: num_distinct_vehicle_timestamps
        description: Distinct count of vehicle timestamps from the feed (https://gtfs.org/realtime/reference/#message-vehicleposition).
      - *min_extract_ts
      - *max_extract_ts
      - *min_header_timestamp
      - *max_header_timestamp
      - name: min_vehicle_timestamp
        description: Earliest vehicle timestamp of a message referencing this trip.
      - name: max_vehicle_timestamp
        description: Latest vehicle timestamp of a message referencing this trip.
      - name: first_position_latitude
        description: Position latitude of the first extract referencing this trip.
      - name: first_position_longitude
        description: Position longitude of the first extract referencing this trip.
      - name: last_position_latitude
        description: Position latitude of the last extract referencing this trip.
      - name: last_position_longitude
        description: Position longitude of the last extract referencing this trip.
