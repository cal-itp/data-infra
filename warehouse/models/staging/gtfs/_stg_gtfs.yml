version: 2

models:
  - name: stg_gtfs_schedule__download_outcomes
    description: Outcomes from download attempts of GTFS schedule data.
    tests:
      - &schedule_outcome_uniqueness
        dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - base64_url
            - ts
    columns:
      - name: dt
      - name: name
      - name: url
      - name: feed_type
      - name: config_extracted_at
      - name: schedule_url_for_validation
      - name: download_success
      - name: download_exception
      - name: download_response_code
      - name: download_response_headers
      - name: base64_url
      - name: ts
  - name: stg_gtfs_schedule__unzip_outcomes
    description: Outcomes from unzip attempts on downloaded GTFS schedule data.
    tests:
      - *schedule_outcome_uniqueness
    columns:
      - name: dt
      - name: name
      - name: url
      - name: feed_type
      - name: config_extracted_at
      - name: unzip_success
      - name: unzip_exception
      - name: zipfile_extract_md5hash
        description: '{{ doc("column_zipfile_md5_hash") }}'
      - name: zipfile_files
        description: '{{ doc("column_zipfile_files") }}'
      - name: zipfile_dirs
        description: '{{ doc("column_zipfile_dirs") }}'
      - name: base64_url
      - name: ts
  - name: stg_gtfs_schedule__file_parse_outcomes
    description: Outcomes from parse (.txt --> .jsonl conversion) attempts on files within GTFS feeds.
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - base64_url
            - ts
            - filename
  - name: stg_gtfs_rt__vehicle_positions
    description: |
      Vehicle positions realtime data.
      See https://gtfs.org/realtime/reference/ for specification.
    tests:
      # ideally base64_url, _extract_ts, id would be sufficient
      # but this is not the case in the MTC 511 feed, so adding position
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - base64_url
            - _extract_ts
            - id
            - position_latitude
            - position_longitude
          # test hour = 0 UTC because that's 5pm Pacific = PM peak, good sample of data
          where: dt >= DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY) AND (EXTRACT(HOUR FROM _extract_ts)) = 0
    columns:
      - name: dt
      - name: hour
      - name: base64_url
      - name: _extract_ts
      - name: _config_extracted_at
      - name: _name
      - name: header_timestamp
      - name: header_incrementality
      - name: header_version
      - name: id
      - name: current_stop_sequence
      - name: stop_id
      - name: current_status
      - name: vehicle_timestamp
      - name: congestion_level
      - name: occupancy_status
      - name: occupancy_percentage
      - name: vehicle_id
      - name: vehicle_label
      - name: vehicle_license_plate
      - name: trip_id
      - name: trip_route_id
      - name: trip_direction_id
      - name: trip_start_time
      - name: trip_start_date
      - name: trip_schedule_relationship
      - name: latitude
      - name: longitude
      - name: bearing
      - name: odometer
      - name: speed
  - name: stg_gtfs_schedule__routes
    description: |
      Cleaned GTFS schedule route data.
      See https://gtfs.org/schedule/reference/#routestxt for specification.
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - base64_url
            - ts
            - route_id
    columns:
      - name: base64_url
      - name: ts
      - name: route_id
        description: '{{ doc("gtfs_routes__route_id") }}'
        tests:
        - not_null
      - name: agency_id
        description: '{{ doc("gtfs_routes__agency_id") }}'
      - name: route_short_name
        description: '{{ doc("gtfs_routes__route_short_name") }}'
      - name: route_long_name
        description: '{{ doc("gtfs_routes__route_long_name") }}'
      - name: route_desc
        description: '{{ doc("gtfs_routes__route_desc") }}'
      - name: route_type
        description: '{{ doc("gtfs_routes__route_type") }}'
        tests:
        - not_null
      - name: route_url
        description: '{{ doc("gtfs_routes__route_url") }}'
      - name: route_color
        description: '{{ doc("gtfs_routes__route_color") }}'
      - name: route_text_color
        description: '{{ doc("gtfs_routes__route_text_color") }}'
      - name: route_sort_order
        description: '{{ doc("gtfs_routes__route_sort_order") }}'
      - name: continuous_pickup
        description: '{{ doc("gtfs_routes__continuous_pickup") }}'
      - name: continuous_drop_off
        description: '{{ doc("gtfs_routes__continuous_drop_off") }}'
  - name: stg_gtfs_schedule__trips
    description: |
      Cleaned GTFS schedule trip data.
      See https://gtfs.org/schedule/reference/#tripstxt for specification.
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - base64_url
            - ts
            - trip_id
          severity: warn
    columns:
      - name: base64_url
      - name: ts
      - name: route_id
        description: '{{ doc("gtfs_trips__route_id") }}'
        tests:
        - not_null
      - name: service_id
        description: '{{ doc("gtfs_trips__service_id") }}'
        tests:
        - not_null
      - name: trip_id
        description: '{{ doc("gtfs_trips__trip_id") }}'
        tests:
        - not_null
      - name: trip_headsign
        description: '{{ doc("gtfs_trips__trip_headsign") }}'
      - name: trip_short_name
        description: '{{ doc("gtfs_trips__trip_short_name") }}'
      - name: direction_id
        description: '{{ doc("gtfs_trips__direction_id") }}'
      - name: block_id
        description: '{{ doc("gtfs_trips__block_id") }}'
      - name: shape_id
        description: '{{ doc("gtfs_trips__shape_id") }}'
      - name: wheelchair_accessible
        description: '{{ doc("gtfs_trips__wheelchair_accessible") }}'
      - name: bikes_allowed
        description: '{{ doc("gtfs_trips__bikes_allowed") }}'
