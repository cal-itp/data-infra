WITH source AS (
    SELECT * FROM {{ source('external_littlepay_v3', 'micropayments') }}
),

-- bringing this in identify transaction_time (removed in v3) by joining device_transactions -> micropayment_device_transactions -> micropayments
micropayment_device_transactions AS (
    SELECT
        littlepay_transaction_id,
        micropayment_id
    FROM {{ ref('stg_littlepay__micropayment_device_transactions_v3') }}
),

-- bringing this in identify transaction_time (removed in v3) by joining device_transactions -> micropayment_device_transactions -> micropayments
device_transactions AS (
    SELECT
        littlepay_transaction_id,
        transaction_date_time_utc
    FROM {{ ref('stg_littlepay__device_transactions_v3') }}
),

clean_columns AS (
    SELECT
        {{ trim_make_empty_string_null('micropayment_id') }} AS micropayment_id,
        {{ trim_make_empty_string_null('aggregation_id') }} AS aggregation_id,
        {{ trim_make_empty_string_null('participant_id') }} AS participant_id,
        {{ trim_make_empty_string_null('customer_id') }} AS customer_id,

        -- renamed funding_source_id in v3, this was funding_source_vault_id in v1
        {{ trim_make_empty_string_null('funding_source_id') }} AS funding_source_vault_id,

        -- these are new fields in v3, excluding for now to faciliate union with feed v1
        -- record_updated_timestamp_utc,
        -- channel,

        {{ trim_make_empty_string_null('payment_liability') }} AS payment_liability,
        SAFE_CAST({{ trim_make_empty_string_null('charge_amount') }} AS NUMERIC) AS charge_amount,
        SAFE_CAST({{ trim_make_empty_string_null('nominal_amount') }} AS NUMERIC) AS nominal_amount,
        SAFE_CAST({{ trim_make_empty_string_null('currency_code') }} AS NUMERIC) AS currency_code,
        {{ trim_make_empty_string_null('type') }} AS type,
        {{ trim_make_empty_string_null('charge_type') }} AS charge_type,
        SAFE_CAST({{ trim_make_empty_string_null('_line_number') }} AS INTEGER) AS _line_number,
        `instance`,
        extract_filename,
        ts,
        {{ extract_littlepay_filename_ts() }} AS littlepay_export_ts,
        {{ extract_littlepay_filename_date() }} AS littlepay_export_date,
    FROM source
),

enrich_with_transaction_time AS (
    SELECT
        clean_columns.*,
        TIMESTAMP(device_transactions.transaction_date_time_utc) AS transaction_time
    FROM clean_columns
    LEFT JOIN micropayment_device_transactions USING (micropayment_id)
    LEFT JOIN device_transactions USING (littlepay_transaction_id)
),

create_content_hash AS (
    SELECT
        *,
        -- hash all content not generated by us to enable deduping full dup rows
        -- hashing at this step will preserve distinction between nulls and empty strings in case that is meaningful upstream
        -- removed 'transaction_time' from hash because they are not included in feed v3
        {{ dbt_utils.generate_surrogate_key(['participant_id',
            'aggregation_id', 'micropayment_id', 'customer_id', 'funding_source_vault_id', 'transaction_time',
            'payment_liability', 'charge_amount', 'nominal_amount',
            'currency_code', 'type', 'charge_type']) }} AS _content_hash,
    FROM enrich_with_transaction_time
),

dedupe_rows AS (
    SELECT *
    FROM create_content_hash
    {{ qualify_dedupe_full_duplicate_lp_rows() }}
),

add_surrogate_keys AS (
    SELECT
        *,
        -- generate keys now that input columns have been trimmed & cast
        {{ dbt_utils.generate_surrogate_key(['littlepay_export_ts', '_line_number', 'instance']) }} AS _key,
        {{ dbt_utils.generate_surrogate_key(['micropayment_id']) }} AS _payments_key,
    FROM dedupe_rows
    -- completed variable fare payments have two rows with same micropayment id and different transaction times
    -- we keep the second tap for these
    QUALIFY ROW_NUMBER() OVER (PARTITION BY micropayment_id ORDER BY transaction_time DESC) = 1
),

stg_littlepay__micropayments_v3 AS (
    SELECT
        micropayment_id,
        aggregation_id,
        participant_id,
        customer_id,
        funding_source_vault_id,
        transaction_time,
        payment_liability,
        charge_amount,
        nominal_amount,
        currency_code,
        type,
        charge_type,

        -- these are new fields in v3, excluding for now to faciliate union with feed v1
        -- record_updated_timestamp_utc,
        -- channel,

        _line_number,
        `instance`,
        extract_filename,
        ts,
        littlepay_export_ts,
        littlepay_export_date,
        _content_hash,
        _key,
        _payments_key,
    FROM add_surrogate_keys
)

SELECT * FROM stg_littlepay__micropayments_v3
