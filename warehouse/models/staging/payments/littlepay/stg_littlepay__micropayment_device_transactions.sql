WITH source AS (
    SELECT * FROM {{ source('external_littlepay', 'micropayment_device_transactions') }}
),

clean_columns AS (
    SELECT
        {{ trim_make_empty_string_null('littlepay_transaction_id') }} AS littlepay_transaction_id,
        {{ trim_make_empty_string_null('micropayment_id') }} AS micropayment_id,
        CAST(_line_number AS INTEGER) AS _line_number,
        `instance`,
        extract_filename,
        ts,
        {{ extract_littlepay_filename_ts() }} AS littlepay_export_ts,
        {{ extract_littlepay_filename_date() }} AS littlepay_export_date,
        -- hash all content not generated by us to enable deduping full dup rows
        -- hashing at this step will preserve distinction between nulls and empty strings in case that is meaningful upstream
        {{ dbt_utils.generate_surrogate_key(['littlepay_transaction_id', 'micropayment_id']) }} AS _content_hash,
    FROM source
),

add_keys_drop_full_dupes AS (
    SELECT
        *,
        -- generate keys now that input columns have been trimmed & cast and files deduped
        {{ dbt_utils.generate_surrogate_key(['littlepay_export_ts', '_line_number', 'instance']) }} AS _key,
        {{ dbt_utils.generate_surrogate_key(['littlepay_transaction_id', 'micropayment_id']) }} AS _payments_key,
    FROM clean_columns
    {{ qualify_dedupe_full_duplicate_lp_rows() }}
),

stg_littlepay__micropayment_device_transactions AS (
    SELECT
        littlepay_transaction_id,
        micropayment_id,
        _line_number,
        `instance`,
        extract_filename,
        ts,
        littlepay_export_ts,
        littlepay_export_date,
        _key,
        _payments_key,
        _content_hash,
    FROM add_keys_drop_full_dupes
    -- Drops one row associated with the bad customer record, likely used for testing, that's
    -- dropped in stg_littlepay__customer_funding_source.
    WHERE _key != 'f224555905f05b4869475f01a385d2bb'
    -- drops two true duplicates from two micropayments that generated multiple IDs seemingly
    -- unintentionally (those micropayments are themselves dropped in the micropayments model)
    AND _key not in ('b9578c8e1ffa81a1c5b452cfbee0d8ea', '2a286598030d7037ef4425854b54382b')
)

SELECT * FROM stg_littlepay__micropayment_device_transactions
