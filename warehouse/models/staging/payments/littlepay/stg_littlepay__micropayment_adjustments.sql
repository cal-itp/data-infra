WITH source AS (
    SELECT * FROM {{ source('external_littlepay', 'micropayment_adjustments') }}
),

clean_columns AS (
    SELECT
        {{ trim_make_empty_string_null('micropayment_id') }} AS micropayment_id,
        {{ trim_make_empty_string_null('adjustment_id') }} AS adjustment_id,
        {{ trim_make_empty_string_null('participant_id') }} AS participant_id,
        {{ trim_make_empty_string_null('customer_id') }} AS customer_id,
        {{ trim_make_empty_string_null('product_id') }} AS product_id,
        {{ trim_make_empty_string_null('type') }} AS type,
        {{ trim_make_empty_string_null('description') }} AS description,
        {{ trim_make_empty_string_null('amount') }} AS amount,
        {{ trim_make_empty_string_null('time_period_type') }} AS time_period_type,
        {{ safe_cast('applied', type_boolean()) }} AS applied,
        {{ trim_make_empty_string_null('zone_ids_us') }} AS zone_ids_us,
        CAST(_line_number AS INTEGER) AS _line_number,
        `instance`,
        extract_filename,
        ts,
        {{ extract_littlepay_filename_ts() }} AS littlepay_export_ts,
        {{ extract_littlepay_filename_date() }} AS littlepay_export_date,
        -- hash all content not generated by us to enable deduping full dup rows
        -- hashing at this step will preserve distinction between nulls and empty strings in case that is meaningful upstream
        {{ dbt_utils.generate_surrogate_key(['micropayment_id', 'adjustment_id', 'participant_id',
            'customer_id', 'product_id', 'type', 'description', 'amount', 'time_period_type',
            'applied', 'zone_ids_us']) }} AS _content_hash,
    FROM source
),

add_keys_drop_full_dupes AS (
    SELECT
        *,
        -- generate keys now that input columns have been trimmed & cast and files deduped
        {{ dbt_utils.generate_surrogate_key(['littlepay_export_ts', '_line_number', 'instance']) }} AS _key,
        {{ dbt_utils.generate_surrogate_key(['micropayment_id', 'adjustment_id']) }} AS _payments_key,
    FROM clean_columns
    {{ qualify_dedupe_full_duplicate_lp_rows() }}
),

stg_littlepay__micropayment_adjustments AS (
    SELECT
        micropayment_id,
        adjustment_id,
        participant_id,
        customer_id,
        product_id,
        type,
        description,
        amount,
        time_period_type,
        applied,
        zone_ids_us,
        _line_number,
        `instance`,
        extract_filename,
        ts,
        littlepay_export_ts,
        littlepay_export_date,
        _key,
        _payments_key,
        _content_hash,
    FROM add_keys_drop_full_dupes
)

SELECT * FROM stg_littlepay__micropayment_adjustments
