WITH source AS (
    SELECT * FROM {{ source('external_littlepay', 'product_data') }}
),

clean_columns AS (
    SELECT
        {{ trim_make_empty_string_null('participant_id') }} AS participant_id,
        {{ trim_make_empty_string_null('product_id') }} AS product_id,
        {{ trim_make_empty_string_null('previous_version_id') }} AS previous_version_id,
        {{ trim_make_empty_string_null('original_version_id') }} AS original_version_id,
        {{ trim_make_empty_string_null('product_code') }} AS product_code,
        {{ trim_make_empty_string_null('product_description') }} AS product_description,
        {{ trim_make_empty_string_null('product_type') }} AS product_type,
        {{ trim_make_empty_string_null('activation_type') }} AS activation_type,
        {{ trim_make_empty_string_null('product_status') }} AS product_status,
        {{ trim_make_empty_string_null('superseded') }} AS superseded,
        {{ trim_make_empty_string_null('created_date') }} AS created_date,
        {{ trim_make_empty_string_null('capping_type') }} AS capping_type,
        {{ safe_cast('multi_operator', type_boolean()) }} AS multi_operator,
        {{ safe_cast('capping_start_time', 'TIME') }} AS capping_start_time,
        {{ safe_cast('capping_end_time', 'TIME') }} AS capping_end_time,
        {{ trim_make_empty_string_null('rules_transaction_types') }} AS rules_transaction_types,
        {{ trim_make_empty_string_null('rules_default_limit') }} AS rules_default_limit,
        {{ trim_make_empty_string_null('rules_max_fare_value') }} AS rules_max_fare_value,
        {{ safe_cast('scheduled_start_date_time', 'DATE') }} AS scheduled_start_date_time,
        {{ safe_cast('scheduled_end_date_time', 'DATE') }} AS scheduled_end_date_time,
        {{ safe_cast('all_day', type_boolean()) }} AS all_day,
        {{ trim_make_empty_string_null('weekly_cap_start_day') }} AS weekly_cap_start_day,
        {{ trim_make_empty_string_null('weekly_cap_end_day') }} AS weekly_cap_end_day,
        {{ safe_cast('number_of_days_in_cap_window', type_float()) }} AS number_of_days_in_cap_window,
        {{ safe_cast('capping_duration', type_float()) }} AS capping_duration,
        {{ safe_cast('number_of_transfer', type_float()) }} AS number_of_transfer,
        {{ trim_make_empty_string_null('capping_time_zone') }} AS capping_time_zone,
        {{ safe_cast('capping_overlap_time', 'TIME') }} AS capping_overlap_time,
        {{ trim_make_empty_string_null('capping_application_level') }} AS capping_application_level,
        {{ safe_cast('route_capping_enabled', type_boolean()) }} AS route_capping_enabled,
        {{ trim_make_empty_string_null('routes') }} AS routes,
        {{ safe_cast('zoned_capping_enabled', type_boolean()) }} AS zoned_capping_enabled,
        {{ trim_make_empty_string_null('zoned_capping_mode') }} AS zoned_capping_mode,
        {{ trim_make_empty_string_null('zoned_capping_pricing_type') }} AS zoned_capping_pricing_type,
        {{ trim_make_empty_string_null('on_peak_zones') }} AS on_peak_zones,
        {{ trim_make_empty_string_null('off_peak_zones') }} AS off_peak_zones,
        {{ safe_cast('incentive_enabled', type_boolean()) }} AS incentive_enabled,
        {{ trim_make_empty_string_null('incentive_type') }} AS incentive_type,
        {{ trim_make_empty_string_null('discount_qualifier') }} AS discount_qualifier,
        {{ trim_make_empty_string_null('configuration') }} AS configuration,
        CAST(_line_number AS INTEGER) AS _line_number,
        `instance`,
        extract_filename,
        {{ extract_littlepay_filename_ts() }} AS littlepay_export_ts,
        {{ extract_littlepay_filename_date() }} AS littlepay_export_date,
        ts,
        -- hash all content not generated by us to enable deduping full dup rows
        -- hashing at this step will preserve distinction between nulls and empty strings in case that is meaningful upstream
        {{ dbt_utils.generate_surrogate_key(['participant_id', 'product_id', 'previous_version_id', 'original_version_id', 'product_code',
            'product_description', 'product_type', 'activation_type', 'product_status', 'superseded',
            'created_date', 'capping_type', 'multi_operator', 'capping_start_time',
            'capping_end_time', 'rules_transaction_types', 'rules_default_limit',
            'rules_max_fare_value', 'scheduled_start_date_time', 'scheduled_end_date_time',
            'all_day', 'weekly_cap_start_day', 'weekly_cap_end_day', 'number_of_days_in_cap_window',
            'capping_duration', 'number_of_transfer', 'capping_time_zone', 'capping_overlap_time',
            'capping_application_level', 'route_capping_enabled', 'routes', 'zoned_capping_enabled', 'zoned_capping_mode',
            'zoned_capping_pricing_type', 'on_peak_zones', 'off_peak_zones', 'incentive_enabled', 'incentive_type',
            'discount_qualifier', 'configuration']) }} AS _content_hash,
    FROM source
),

add_keys_drop_full_dupes AS (
    SELECT
        *,
        -- generate keys now that input columns have been trimmed & cast and files deduped
        {{ dbt_utils.generate_surrogate_key(['littlepay_export_ts', '_line_number', 'instance']) }} AS _key,
        product_id AS _payments_key,
    FROM clean_columns
    {{ qualify_dedupe_full_duplicate_lp_rows() }}
),

stg_littlepay__product_data AS (
    SELECT
        participant_id,
        product_id,
        previous_version_id,
        original_version_id,
        product_code,
        product_description,
        product_type,
        activation_type,
        product_status,
        superseded,
        created_date,
        capping_type,
        multi_operator,
        capping_start_time,
        capping_end_time,
        rules_transaction_types,
        rules_default_limit,
        rules_max_fare_value,
        scheduled_start_date_time,
        scheduled_end_date_time,
        all_day,
        weekly_cap_start_day,
        weekly_cap_end_day,
        number_of_days_in_cap_window,
        capping_duration,
        number_of_transfer,
        capping_time_zone,
        capping_overlap_time,
        capping_application_level,
        route_capping_enabled,
        routes,
        zoned_capping_enabled,
        zoned_capping_mode,
        zoned_capping_pricing_type,
        on_peak_zones,
        off_peak_zones,
        incentive_enabled,
        incentive_type,
        discount_qualifier,
        configuration,
        _line_number,
        `instance`,
        extract_filename,
        littlepay_export_ts,
        littlepay_export_date,
        ts,
        _key,
        _payments_key,
        _content_hash,
    FROM add_keys_drop_full_dupes
    -- Some products change in form over time, e.g. getting different 'capping_type' values or
    -- changing in status, which produces replacement rows in new exports.
    QUALIFY ROW_NUMBER() OVER (
        PARTITION BY
            product_id
        ORDER BY littlepay_export_ts DESC
    ) = 1
)

SELECT * FROM stg_littlepay__product_data
