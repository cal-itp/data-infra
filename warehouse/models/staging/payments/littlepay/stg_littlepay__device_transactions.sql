WITH source AS (
    SELECT * FROM {{ source('external_littlepay', 'device_transactions') }}
),

clean_columns AS (
    SELECT
        {{ trim_make_empty_string_null('participant_id') }} AS participant_id,
        {{ trim_make_empty_string_null('customer_id') }} AS customer_id,
        {{ trim_make_empty_string_null('device_transaction_id') }} AS device_transaction_id,
        {{ trim_make_empty_string_null('littlepay_transaction_id') }} AS littlepay_transaction_id,
        {{ trim_make_empty_string_null('device_id') }} AS device_id,
        {{ trim_make_empty_string_null('device_id_issuer') }} AS device_id_issuer,
        {{ trim_make_empty_string_null('type') }} AS type,
        {{ trim_make_empty_string_null('transaction_outcome') }} AS transaction_outcome,
        {{ trim_make_empty_string_null('transction_deny_reason') }} AS transction_deny_reason,
        {{ trim_make_empty_string_null('transaction_date_time_utc') }} AS transaction_date_time_utc,
        DATETIME(
            TIMESTAMP(transaction_date_time_utc), "America/Los_Angeles"
        ) AS transaction_date_time_pacific,
         -- trim to align with gtfs cleaning steps
         -- since these fields are used to join with gtfs data
        {{ trim_make_empty_string_null('location_id') }} AS location_id,
        {{ trim_make_empty_string_null('route_id') }} AS route_id,
        {{ trim_make_empty_string_null('location_scheme') }} AS location_scheme,
        {{ trim_make_empty_string_null('location_name') }} AS location_name,
        {{ trim_make_empty_string_null('zone_id') }} AS zone_id,
        {{ trim_make_empty_string_null('mode') }} AS mode,
        {{ trim_make_empty_string_null('direction') }} AS direction,
        CAST(latitude AS NUMERIC) AS latitude,
        CAST(longitude AS NUMERIC) AS longitude,
        ST_GEOGPOINT(CAST(longitude AS NUMERIC), CAST(latitude AS NUMERIC)) AS geography,
        {{ trim_make_empty_string_null('vehicle_id') }} AS vehicle_id,
        {{ trim_make_empty_string_null('granted_zone_ids') }} AS granted_zone_ids,
        {{ trim_make_empty_string_null('onward_zone_ids') }} AS onward_zone_ids,
        CAST(_line_number AS INTEGER) AS _line_number,
        `instance`,
        extract_filename,
        {{ extract_littlepay_filename_ts() }} AS littlepay_export_ts,
        {{ extract_littlepay_filename_date() }} AS littlepay_export_date,
        ts,
        -- hash all content not generated by us to enable deduping full dup rows
        -- hashing at this step will preserve distinction between nulls and empty strings in case that is meaningful upstream
        {{ dbt_utils.generate_surrogate_key(['participant_id', 'customer_id',
            'device_transaction_id', 'littlepay_transaction_id', 'device_id', 'device_id_issuer',
            'type', 'transaction_outcome', 'transction_deny_reason', 'transaction_date_time_utc',
            'location_id', 'location_scheme', 'location_name', 'zone_id', 'route_id', 'mode',
            'direction', 'latitude', 'longitude', 'vehicle_id', 'granted_zone_ids',
            'onward_zone_ids']) }} AS _content_hash,
    FROM source
),

add_keys_drop_full_dupes AS (
    SELECT
        *,
        -- generate keys now that input columns have been trimmed & cast and files deduped
        {{ dbt_utils.generate_surrogate_key(['littlepay_export_ts', '_line_number', 'instance']) }} AS _key,
        littlepay_transaction_id AS _payments_key,
    FROM clean_columns
    {{ qualify_dedupe_full_duplicate_lp_rows() }}
),

stg_littlepay__device_transactions AS (
    SELECT
        participant_id, customer_id,
            device_transaction_id,
            littlepay_transaction_id,
            device_id,
            device_id_issuer,
            type,
            transaction_outcome,
            transction_deny_reason,
            transaction_date_time_utc,
            transaction_date_time_pacific,
            location_id,
            location_scheme,
            location_name,
            zone_id,
            route_id,
            mode,
            direction,
            latitude,
            longitude,
            geography,
            vehicle_id,
            granted_zone_ids,
            onward_zone_ids,
            _line_number,
            `instance`,
            extract_filename,
            littlepay_export_ts,
            littlepay_export_date,
            ts,
            _key,
            _payments_key,
            _content_hash,
    FROM add_keys_drop_full_dupes
    -- Some transactions have placeholder information for routes, stops, and directions in their first export,
    -- then a later export contains the canonical version of the transaction with that information corrected
    QUALIFY ROW_NUMBER() OVER (
        PARTITION BY littlepay_transaction_id
        ORDER BY littlepay_export_ts DESC
    ) = 1
)

SELECT * FROM stg_littlepay__device_transactions
