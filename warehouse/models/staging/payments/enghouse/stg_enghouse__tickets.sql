WITH source AS (
    SELECT * FROM {{ source('external_enghouse', 'tickets') }}
),

clean_columns AS (
    SELECT
        {{ trim_make_empty_string_null('id') }} AS id,
        {{ trim_make_empty_string_null('ticket_id') }} AS ticket_id,
        {{ trim_make_empty_string_null('station_name') }} AS station_name,
        {{ safe_cast('amount', type_numeric()) }} AS amount,
        {{ trim_make_empty_string_null('clearing_id') }} AS clearing_id,
        {{ trim_make_empty_string_null('operator_id') }} AS operator_id,
        {{ trim_make_empty_string_null('reason') }} AS reason,
        {{ trim_make_empty_string_null('tap_id') }} AS tap_id,
        {{ trim_make_empty_string_null('ticket_type') }} AS ticket_type,
        {{ safe_cast('created_dttm', type_timestamp()) }} AS created_dttm,
        {{ trim_make_empty_string_null('kafka_send_status') }} AS kafka_send_status,
        {{ trim_make_empty_string_null('line') }} AS line,
        {{ trim_make_empty_string_null('start_station') }} AS start_station,
        {{ trim_make_empty_string_null('end_station') }} AS end_station,
        {{ safe_cast('start_dttm', type_timestamp()) }} AS start_dttm,
        {{ safe_cast('end_dttm', type_timestamp()) }} AS end_dttm,
        {{ trim_make_empty_string_null('ticket_code') }} AS ticket_code,
        {{ trim_make_empty_string_null('additional_infos') }} AS additional_infos,
        CAST(_line_number AS INTEGER) AS _line_number,
        `instance`,
        extract_filename,
        -- revisit the use of this littlepay-specific macro
        {{ extract_littlepay_filename_ts() }} AS enghouse_export_ts,
        {{ extract_littlepay_filename_date() }} AS enghouse_export_date,
        ts,
        -- hash all content not generated by us to enable deduping full dup rows
        -- hashing at this step will preserve distinction between nulls and empty strings in case that is meaningful upstream
        {{ dbt_utils.generate_surrogate_key(['id', 'ticket_id', 'station_name', 'amount', 'clearing_id', 'operator_id',
            'reason', 'tap_id', 'ticket_type', 'created_dttm', 'kafka_send_status', 'line', 'start_station',
            'end_station', 'start_dttm', 'end_dttm', 'ticket_code', 'additional_infos']) }} AS _content_hash,
    FROM source
),

stg_enghouse__tickets AS (
    SELECT
        id,
        ticket_id,
        station_name,
        amount,
        clearing_id,
        operator_id,
        reason,
        tap_id,
        ticket_type,
        created_dttm,
        kafka_send_status,
        line,
        start_station,
        end_station,
        start_dttm,
        end_dttm,
        ticket_code,
        additional_infos,
         _line_number,
        `instance`,
        extract_filename,
        enghouse_export_ts,
        enghouse_export_date,
        ts,
        -- _key,
        -- _payments_key,
        _content_hash,
    FROM clean_columns
)

SELECT * FROM stg_enghouse__tickets
