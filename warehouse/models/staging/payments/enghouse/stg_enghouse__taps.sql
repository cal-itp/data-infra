WITH source AS (
    SELECT * FROM {{ source('external_enghouse', 'taps') }}
),

clean_columns AS (
    SELECT
        {{ trim_make_empty_string_null('tap_id') }} AS tap_id,
        {{ trim_make_empty_string_null('mapping_terminal_id') }} AS mapping_terminal_id,
        {{ trim_make_empty_string_null('mapping_merchant_id') }} AS mapping_merchant_id,
        {{ trim_make_empty_string_null('terminal') }} AS terminal,
        {{ trim_make_empty_string_null('token') }} AS token,
        {{ trim_make_empty_string_null('masked_pan') }} AS masked_pan,
        {{ safe_cast('expiry', type_int()) }} AS expiry,
        {{ safe_cast('server_date', type_timestamp()) }} AS server_date,
        {{ safe_cast('terminal_date', type_timestamp()) }} AS terminal_date,
        {{ safe_cast('tx_number', type_int()) }} AS tx_number,
        {{ trim_make_empty_string_null('tx_status') }} AS tx_status,
        {{ trim_make_empty_string_null('payment_reference') }} AS payment_reference,
        {{ trim_make_empty_string_null('terminal_spdh_code') }} AS terminal_spdh_code,
        {{ trim_make_empty_string_null('denylist_version') }} AS denylist_version,
        {{ trim_make_empty_string_null('transit_data') }} AS transit_data,
        {{ trim_make_empty_string_null('currency') }} AS currency,
        {{ trim_make_empty_string_null('par') }} AS par,
        CAST(_line_number AS INTEGER) AS _line_number,
        `instance`,
        extract_filename,
        -- revisit the use of this littlepay-specific macro
        {{ extract_littlepay_filename_ts() }} AS enghouse_export_ts,
        {{ extract_littlepay_filename_date() }} AS enghouse_export_date,
        ts,
        -- hash all content not generated by us to enable deduping full dup rows
        -- hashing at this step will preserve distinction between nulls and empty strings in case that is meaningful upstream
        {{ dbt_utils.generate_surrogate_key(['tap_id', 'mapping_terminal_id', 'mapping_merchant_id', 'terminal',
            'token', 'masked_pan', 'expiry', 'server_date', 'terminal_date', 'tx_number', 'tx_status',
            'payment_reference', 'terminal_spdh_code', 'denylist_version', 'transit_data',
            'currency', 'par']) }} AS _content_hash,
    FROM source
),

stg_enghouse__taps AS (
    SELECT
        tap_id,
        mapping_terminal_id,
        mapping_merchant_id,
        terminal,
        token,
        masked_pan,
        expiry,
        server_date,
        terminal_date,
        tx_number,
        tx_status,
        payment_reference,
        terminal_spdh_code,
        denylist_version,
        transit_data,
        currency,
        par,
         _line_number,
        `instance`,
        extract_filename,
        enghouse_export_ts,
        enghouse_export_date,
        ts,
        -- _key,
        -- _payments_key,
        _content_hash,
    FROM clean_columns
)

SELECT * FROM stg_enghouse__taps
