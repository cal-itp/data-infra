WITH source AS (
    SELECT * FROM {{ source('external_enghouse', 'transactions') }}
),

clean_columns AS (
    SELECT
        {{ trim_make_empty_string_null('id') }} AS id,
        {{ trim_make_empty_string_null('operation') }} AS operation,
        {{ trim_make_empty_string_null('terminal_id') }} AS terminal_id,
        {{ trim_make_empty_string_null('mapping_terminal_id') }} AS mapping_terminal_id,
        {{ trim_make_empty_string_null('mapping_merchant_id') }} AS mapping_merchant_id,
        {{ safe_cast('timestamp', type_timestamp()) }} AS timestamp,
        {{ safe_cast('amount', type_numeric()) }} AS amount,
        {{ trim_make_empty_string_null('payment_reference') }} AS payment_reference,
        {{ trim_make_empty_string_null('spdh_response') }} AS spdh_response,
        {{ trim_make_empty_string_null('response_type') }} AS response_type,
        {{ trim_make_empty_string_null('response_message') }} AS response_message,
        {{ trim_make_empty_string_null('token') }} AS token,
        {{ trim_make_empty_string_null('issuer_response') }} AS issuer_response,
        {{ trim_make_empty_string_null('core_response') }} AS core_response,
        {{ trim_make_empty_string_null('rrn') }} AS rrn,
        {{ trim_make_empty_string_null('authorization_code') }} AS authorization_code,
        {{ trim_make_empty_string_null('par') }} AS par,
        {{ trim_make_empty_string_null('brand') }} AS brand,
        CAST(_line_number AS INTEGER) AS _line_number,
        `instance`,
        extract_filename,
        -- revisit the use of this littlepay-specific macro
        {{ extract_littlepay_filename_ts() }} AS enghouse_export_ts,
        {{ extract_littlepay_filename_date() }} AS enghouse_export_date,
        ts,
        -- hash all content not generated by us to enable deduping full dup rows
        -- hashing at this step will preserve distinction between nulls and empty strings in case that is meaningful upstream
        {{ dbt_utils.generate_surrogate_key(['id', 'operation', 'terminal_id', 'mapping_terminal_id',
            'mapping_merchant_id', 'timestamp', 'amount', 'payment_reference', 'spdh_response',
            'response_type', 'response_message', 'token', 'issuer_response', 'core_response','rrn',
            'authorization_code', 'par', 'brand']) }} AS _content_hash,
    FROM source
),

stg_enghouse__transactions AS (
    SELECT
        id,
        operation,
        terminal_id,
        mapping_terminal_id,
        mapping_merchant_id,
        timestamp,
        amount,
        payment_reference,
        spdh_response,
        response_type,
        response_message,
        token,
        issuer_response,
        core_response,
        rrn,
        authorization_code,
        par,
        brand,
        _line_number,
        `instance`,
        extract_filename,
        enghouse_export_ts,
        enghouse_export_date,
        ts,
        -- _key,
        -- _payments_key,
        _content_hash,
    FROM clean_columns
)

SELECT * FROM stg_enghouse__transactions
