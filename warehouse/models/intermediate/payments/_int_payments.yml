version: 2

models:
  - name: int_payments__authorisations_deduped
    description: |
      This model deduplicates authorisations rows with duplicate `_payments_key` values that require additional handling
      beyond what is covered in the staging model, essentially rows that require a join for deduplication.
      Columns have the same meanings as in the upstream staging model.
      The most important test for this model is on the upstream staging model: to ensure that no
      `_payments_key` values are fully dropped betweeen that model and this one (i.e., to ensure
      that all rows dropped do in fact have a duplicate and no authorisations are lost.)
    columns:
      - name: request_type
        tests:
          - accepted_values:
              values: ['AUTHORISATION', 'DEBT_RECOVERY_AUTHCHECK', 'DEBT_RECOVERY_REVERSAL', 'CARD_CHECK']
      - name: aggregation_id
        tests:
          - relationships:
              to: ref('int_payments__latest_authorisations_by_aggregation')
              field: aggregation_id
  - name: int_payments__latest_authorisations_by_aggregation
    description: |
      This model contains only the most recent authorisations data per `aggregation_id`.
      Many aggregations pass through a few different authorisations (for example, perhaps a card check
      before getting authorised, or multiple debt recovery attempts.) This model keeps only the most
      recent row according to `authorisation_date_time_utc`.
    columns:
      - &aggregation_pk
        name: aggregation_id
        description: |
          ID of the aggregation being summarized. An aggregation can contain or be associated with multiple
          micropayment, authorisation, and settlement events. It represents the unit at which settlement occurs
          (so multiple settlement events only occur for a single aggregation if there are refunds against the original settlement.)
        tests:
          - not_null
          - unique
      - name: currency_code
        tests:
          - accepted_values:
              values: [840]
              quote: false
  - name: int_payments__settlements_to_aggregations
    description: |
      This model contains Littlepay settlements aggregated to the `aggregation_id + retrieval_reference_number` level.
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - aggregation_id
            - retrieval_reference_number
      - dbt_utils.expression_is_true:
          expression: "debit_amount + credit_amount = net_settled_amount_dollars"
      - dbt_utils.expression_is_true:
          expression: "contains_refund = (credit_amount < 0)"
    columns:
      - *aggregation_pk
      - name: retrieval_reference_number
        tests:
          - not_null
          - unique
      - &participant_id
        name: participant_id
        description: '{{ doc("lp_participant_id") }}'
      - name: contains_imputed_type
        description: '{{ doc("lp_settlement_contains_imputed_type") }}'
      - name: contains_refund
        description: '{{ doc("lp_settlement_contains_refund") }}'
      - name: latest_update_timestamp
        description: '{{ doc("lp_settlement_latest_update_timestamp") }}'
      - name: net_settled_amount_dollars
        description: '{{ doc("lp_net_settled_amount_dollars") }}'
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              inclusive: true
      - name: debit_amount
        description: '{{ doc("lp_settlement_debit_amount") }}'
      - name: credit_amount
        description: '{{ doc("lp_settlement_credit_amount") }}'
  - name: int_payments__micropayments_to_aggregations
    description: |
      Littlepay micropayments grouped to the aggregation (`aggregation_id`) level.
    tests:
      - dbt_utils.expression_is_true:
          expression: "total_nominal_amount_dollars >= net_micropayment_amount_dollars"
    columns:
      - *participant_id
      - *aggregation_pk
      - name: net_micropayment_amount_dollars
        description: '{{ doc("lp_net_micropayment_amount_dollars") }}'
      - name: total_nominal_amount_dollars
        description: '{{ doc("lp_total_nominal_amount_dollars") }}'
      - name: latest_transaction_time
        description: '{{ doc("lp_mp_latest_transaction_time") }}'
      - name: num_micropayments
        description: '{{ doc("lp_num_micropayments") }}'
      - name: contains_pre_settlement_refund
        description: '{{ doc("lp_contains_pre_settlement_refund") }}'
      - name: contains_variable_fare
        description: '{{ doc("lp_contains_variable_fare") }}'
      - name: contains_flat_fare
        description: '{{ doc("lp_contains_flat_fare") }}'
      - name: contains_pending_charge
        description: '{{ doc("lp_contains_pending_charge") }}'
      - name: contains_adjusted_micropayment
        description: '{{ doc("lp_contains_adjusted_micropayment") }}'
