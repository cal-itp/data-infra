version: 2

models:
  - name: int_gtfs_schedule__joined_feed_outcomes
    description: |
      Each row is an individual download attempt combined with the associated unzip and parse attempts for
      a given feed on a given date.
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - base64_url
            - ts
    columns:
      - name: gtfs_dataset_key
      - name: ts
      - name: base64_url
      - name: _config_extract_ts
      - name: download_success
      - name: download_exception
      - name: unzip_success
      - name: unzip_exception
      - name: zipfile_extract_md5hash
      - name: zipfile_files
      - name: zipfile_dirs
      - name: pct_files_successfully_parsed
  - name: int_gtfs_schedule__grouped_feed_file_parse_outcomes
    description: |
      Each row is a feed (URL + timestamp), with a summary of whether parsing was successful on the constituent files
      within that feed.
      "Success" means that the raw input file (usually a .txt file) was converted to JSONL format without an error.
      This does not guarantee validity according to the GTFS specification, just that the original input file was
      parseable on a pure file-format level (i.e., the file was not corrupt.)
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - base64_url
            - ts
    columns:
      - name: base64_url
      - name: ts
      - name: count_successes
        description: |
          Number of successful file conversions within this feed.
      - name: count_files
        description: |
          Number of total file conversions attempted for this feed.
      - name: pct_success
        description: |
          Successes as a percent of total files (`count_successes` / `count_files` * 100).
          If this is a value less than 100, indicates that file conversion failed for some files in this feed.
  - name: int_gtfs_schedule__deduped_attributions
    description: |
      Cleaned GTFS schedule attribution data that has also been deduplicated so that each
      `attribution_id` is unique per URL and timestamp.
      See https://gtfs.org/reference/static#attributionstxt for specification.
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - base64_url
            - ts
            - attribution_id
    columns:
      - name: base64_url
      - name: ts
      - name: attribution_id
        description: '{{ doc("gtfs_attributions__attribution_id") }}'
      - name: agency_id
        description: '{{ doc("gtfs_attributions__agency_id") }}'
      - name: route_id
        description: '{{ doc("gtfs_attributions__route_id") }}'
      - name: trip_id
        description: '{{ doc("gtfs_attributions__trip_id") }}'
      - name: organization_name
        description: '{{ doc("gtfs_attributions__organization_name") }}'
        tests:
        - not_null
      - name: is_producer
        description: '{{ doc("gtfs_attributions__is_producer") }}'
      - name: is_operator
        description: '{{ doc("gtfs_attributions__is_operator") }}'
      - name: is_authority
        description: '{{ doc("gtfs_attributions__is_authority") }}'
      - name: attribution_url
        description: '{{ doc("gtfs_attributions__attribution_url") }}'
      - name: attribution_email
        description: '{{ doc("gtfs_attributions__attribution_email") }}'
      - name: attribution_phone
        description: '{{ doc("gtfs_attributions__attribution_phone") }}'
  - name: int_gtfs_schedule__deduped_fare_leg_rules
    description: |
      Cleaned GTFS schedule fare leg rule data that has also been deduplicated so that each combination of
      `network_id`, `from_area_id`, `to_area_id`, and `fare_product_id` are unique
      per URL and timestamp.
      See https://gtfs.org/schedule/reference/#fare_leg_rulestxt for specification.
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - base64_url
            - ts
            - network_id
            - from_area_id
            - to_area_id
            - fare_product_id
    columns:
      - name: base64_url
      - name: ts
      - name: leg_group_id
        description: '{{ doc("gtfs_fare_leg_rules__leg_group_id") }}'
      - name: network_id
        description: '{{ doc("gtfs_fare_leg_rules__network_id") }}'
      - name: from_area_id
        description: '{{ doc("gtfs_fare_leg_rules__from_area_id") }}'
      - name: to_area_id
        description: '{{ doc("gtfs_fare_leg_rules__to_area_id") }}'
      - name: fare_product_id
        description: '{{ doc("gtfs_fare_leg_rules__fare_product_id") }}'
        tests:
        - not_null
  - name: int_gtfs_schedule__deduped_fare_products
    description: |
      Cleaned GTFS schedule fare products data that has also been deduplicated so that each `fare_product_id` is unique
      per URL and timestamp.
      See https://gtfs.org/schedule/reference/#fare_productstxt for specification.
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - base64_url
            - ts
            - fare_product_id
    columns:
      - name: base64_url
      - name: ts
      - name: fare_product_id
        description: '{{ doc("gtfs_fare_products__fare_product_id") }}'
        tests:
        - not_null
      - name: fare_product_name
        description: '{{ doc("gtfs_fare_products__fare_product_name") }}'
      - name: amount
        description: '{{ doc("gtfs_fare_products__amount") }}'
        tests:
        - not_null
      - name: currency
        description: '{{ doc("gtfs_fare_products__currency") }}'
        tests:
        - not_null
  - name: int_gtfs_schedule__deduped_fare_rules
    description: |
      Cleaned GTFS schedule fare leg rule data that has also been deduplicated so that each combination of
      `fare_id`, `route_id`, `origin_id`, `destination_id`, and `contains_id` are unique
      per URL and timestamp.
      See https://gtfs.org/reference/static#fare_rulestxt for specification.
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - base64_url
            - ts
            - fare_id
            - route_id
            - origin_id
            - destination_id
            - contains_id
    columns:
      - name: base64_url
      - name: ts
      - name: fare_id
        description: '{{ doc("gtfs_fare_rules__fare_id") }}'
        tests:
        - not_null
      - name: route_id
        description: '{{ doc("gtfs_fare_rules__route_id") }}'
      - name: origin_id
        description: '{{ doc("gtfs_fare_rules__origin_id") }}'
      - name: destination_id
        description: '{{ doc("gtfs_fare_rules__destination_id") }}'
      - name: contains_id
        description: '{{ doc("gtfs_fare_rules__contains_id") }}'
  - name: int_gtfs_schedule__deduped_fare_transfer_rules
    description: |
      Cleaned GTFS schedule fare transfer rule data that has also been deduplicated so that each combination of
      `from_leg_group_id`, `to_leg_group_id`, `fare_product_id`, `transfer_count`, and `duration_limit` are unique
      per URL and timestamp.
      See https://gtfs.org/schedule/reference/#fare_transfer_rulestxt for specification.
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - base64_url
            - ts
            - from_leg_group_id
            - to_leg_group_id
            - fare_product_id
            - transfer_count
            - duration_limit
    columns:
      - name: base64_url
      - name: ts
      - name: from_leg_group_id
        description: '{{ doc("gtfs_fare_transfer_rules__from_leg_group_id") }}'
      - name: to_leg_group_id
        description: '{{ doc("gtfs_fare_transfer_rules__to_leg_group_id") }}'
      - name: transfer_count
        description: '{{ doc("gtfs_fare_transfer_rules__transfer_count") }}'
      - name: duration_limit
        description: '{{ doc("gtfs_fare_transfer_rules__duration_limit") }}'
      - name: duration_limit_type
        description: '{{ doc("gtfs_fare_transfer_rules__duration_limit_type") }}'
      - name: fare_transfer_type
        description: '{{ doc("gtfs_fare_transfer_rules__fare_transfer_type") }}'
        tests:
        - not_null
      - name: fare_product_id
        description: '{{ doc("gtfs_fare_transfer_rules__fare_product_id") }}'
  - name: int_gtfs_schedule__deduped_feed_info
    description: |
      Cleaned GTFS schedule feed info data that has also been deduplicated so that each combination of
      `feed_publisher_name`, `feed_publisher_url`, `feed_lang`, `default_lang`, `feed_version`,
      `feed_contact_email`, `feed_contact_url`, `feed_start_date` and `feed_end_date` are unique
      per URL and timestamp.
      See https://gtfs.org/reference/static#feed_infotxt for specification.
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - base64_url
            - ts
            - feed_publisher_name
            - feed_publisher_url
            - feed_lang
            - default_lang
            - feed_version
            - feed_contact_email
            - feed_contact_url
            - feed_start_date
            - feed_end_date
    columns:
      - name: base64_url
      - name: ts
      - name: feed_publisher_name
        description: '{{ doc("gtfs_feed_info__feed_publisher_name") }}'
        tests:
        - not_null
      - name: feed_publisher_url
        description: '{{ doc("gtfs_feed_info__feed_publisher_url") }}'
        tests:
        - not_null
      - name: feed_lang
        description: '{{ doc("gtfs_feed_info__feed_lang") }}'
        tests:
        - not_null
      - name: default_lang
        description: '{{ doc("gtfs_feed_info__default_lang") }}'
      - name: feed_start_date
        description: '{{ doc("gtfs_feed_info__feed_start_date") }}'
      - name: feed_end_date
        description: '{{ doc("gtfs_feed_info__feed_end_date") }}'
      - name: feed_version
        description: '{{ doc("gtfs_feed_info__feed_version") }}'
      - name: feed_contact_email
        description: '{{ doc("gtfs_feed_info__feed_contact_email") }}'
      - name: feed_contact_url
        description: '{{ doc("gtfs_feed_info__feed_contact_url") }}'
  - name: int_gtfs_schedule__deduped_stops
    description: |
      Cleaned GTFS schedule stop data that has also been deduplicated so that each `stop_id` is unique
      per URL and timestamp.
      See https://gtfs.org/reference/static#stopstxt for specification.
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - base64_url
            - ts
            - stop_id
    columns:
      - name: base64_url
      - name: ts
      - name: stop_id
        description: '{{ doc("gtfs_stops__stop_id") }}'
        tests:
        - not_null
      - name: stop_code
        description: '{{ doc("gtfs_stops__stop_code") }}'
      - name: stop_name
        description: '{{ doc("gtfs_stops__stop_name") }}'
      - name: tts_stop_name
        description: '{{ doc("gtfs_stops__tts_stop_name") }}'
      - name: stop_desc
        description: '{{ doc("gtfs_stops__stop_desc") }}'
      - name: stop_lat
        description: '{{ doc("gtfs_stops__stop_lat") }}'
        meta:
          metabase.semantic_type: type/Latitude
          ckan.type: FLOAT
          ckan.length: 6
          ckan.precision: 3
      - name: stop_lon
        description: '{{ doc("gtfs_stops__stop_lon") }}'
        meta:
          metabase.semantic_type: type/Longitude
          ckan.type: FLOAT
          ckan.length: 7
          ckan.precision: 3
      - name: zone_id
        description: '{{ doc("gtfs_stops__zone_id") }}'
      - name: stop_url
        description: '{{ doc("gtfs_stops__stop_url") }}'
      - name: location_type
        description: '{{ doc("gtfs_stops__location_type") }}'
      - name: parent_station
        description: '{{ doc("gtfs_stops__parent_station") }}'
      - name: stop_timezone
        description: '{{ doc("gtfs_stops__stop_timezone") }}'
      - name: wheelchair_boarding
        description: '{{ doc("gtfs_stops__wheelchair_boarding") }}'
      - name: level_id
        description: '{{ doc("gtfs_stops__level_id") }}'
      - name: platform_code
        description: '{{ doc("gtfs_stops__platform_code") }}'
  - name: int_gtfs_schedule__deduped_transfers
    description: |
      Cleaned GTFS schedule transfer data that has also been deduplicated so that each combination of
      `from_stop_id`, `to_stop_id`, `from_trip_id`, `to_trip_id`, `from_route_id`, and `to_route_id`
      are unique per URL and timestamp.
      See https://gtfs.org/reference/static#transferstxt for specification.
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - base64_url
            - ts
            - from_stop_id
            - to_stop_id
            - from_trip_id
            - to_trip_id
            - from_route_id
            - to_route_id
    columns:
      - name: base64_url
      - name: ts
      - name: from_stop_id
        description: '{{ doc("gtfs_transfers__from_stop_id") }}'
        tests:
        - not_null
      - name: to_stop_id
        description: '{{ doc("gtfs_transfers__to_stop_id") }}'
        tests:
        - not_null
      - name: transfer_type
        description: '{{ doc("gtfs_transfers__transfer_type") }}'
        tests:
        - not_null
      - name: min_transfer_time
        description: '{{ doc("gtfs_transfers__min_transfer_time") }}'
      - name: from_route_id
      - name: to_route_id
      - name: from_trip_id
      - name: to_trip_id
  - name: int_gtfs_schedule__deduped_trips
    description: |
      Cleaned GTFS schedule trip data that has also been deduplicated so that each `trip_id` is unique
      per URL and timestamp.
      See https://gtfs.org/schedule/reference/#tripstxt for specification.
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - base64_url
            - ts
            - trip_id
    columns:
      - name: base64_url
      - name: ts
      - name: route_id
        description: '{{ doc("gtfs_trips__route_id") }}'
        tests:
        - not_null
      - name: service_id
        description: '{{ doc("gtfs_trips__service_id") }}'
        tests:
        - not_null
      - name: trip_id
        description: '{{ doc("gtfs_trips__trip_id") }}'
        tests:
        - not_null
      - name: trip_headsign
        description: '{{ doc("gtfs_trips__trip_headsign") }}'
      - name: trip_short_name
        description: '{{ doc("gtfs_trips__trip_short_name") }}'
      - name: direction_id
        description: '{{ doc("gtfs_trips__direction_id") }}'
      - name: block_id
        description: '{{ doc("gtfs_trips__block_id") }}'
      - name: shape_id
        description: '{{ doc("gtfs_trips__shape_id") }}'
      - name: wheelchair_accessible
        description: '{{ doc("gtfs_trips__wheelchair_accessible") }}'
      - name: bikes_allowed
        description: '{{ doc("gtfs_trips__bikes_allowed") }}'
